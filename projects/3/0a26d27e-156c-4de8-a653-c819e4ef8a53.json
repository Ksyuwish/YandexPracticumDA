{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Определение перспективного тарифа для телеком компании"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Нашей задачей является анализ тарифных планов компании «Мегалайн» — федерального оператора сотовой связи. Клиентам предлагают два тарифных плана: «Смарт» и «Ультра». Чтобы скорректировать рекламный бюджет, коммерческий департамент хочет понять, какой тариф приносит больше денег.\n",
    "В проекте будет реализован предварительный анализ тарифов на небольшой выборке клиентов. У нас есть данные 500 пользователей «Мегалайна»: кто они, откуда, каким тарифом пользуются, сколько звонков и сообщений каждый отправил за 2018 год. В данном проекте мы проанализируем поведение клиентов и сделаем вывод — какой тариф лучше."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* [Шаг 1. Откройте файл с данными и изучите общую информацию.](#step1)\n",
    "* [Шаг 2. Подготовьте данные](#step2)\n",
    "* [Шаг 3. Проанализируйте данные](#step3)\n",
    "* [Шаг 4. Проверьте гипотезы](#step4)\n",
    "* [Шаг 5. Напишите общий вывод](#step5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Шаг 1. Откройте файл с данными и изучите общую информацию <a class=\"anchor\" id=\"step1\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 298,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import math\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "sns.set();\n",
    "pd.set_option('display.max_columns', None)\n",
    "import numpy as np\n",
    "from scipy import stats as st"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 299,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 202607 entries, 0 to 202606\n",
      "Data columns (total 4 columns):\n",
      "id           202607 non-null object\n",
      "call_date    202607 non-null object\n",
      "duration     202607 non-null float64\n",
      "user_id      202607 non-null int64\n",
      "dtypes: float64(1), int64(1), object(2)\n",
      "memory usage: 6.2+ MB\n"
     ]
    }
   ],
   "source": [
    "calls = pd.read_csv('/datasets/calls.csv')\n",
    "calls.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Понизим разрядность столбцов duration и user_id для оптимизации работы кода."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 300,
   "metadata": {},
   "outputs": [],
   "source": [
    "calls['duration'] = pd.to_numeric(calls['duration'], downcast='float')\n",
    "calls['user_id'] = pd.to_numeric(calls['user_id'], downcast='signed')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 301,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>call_date</th>\n",
       "      <th>duration</th>\n",
       "      <th>user_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>78645</td>\n",
       "      <td>1196_877</td>\n",
       "      <td>2018-06-09</td>\n",
       "      <td>13.51</td>\n",
       "      <td>1196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>51135</td>\n",
       "      <td>1126_698</td>\n",
       "      <td>2018-02-20</td>\n",
       "      <td>4.47</td>\n",
       "      <td>1126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>33261</td>\n",
       "      <td>1081_506</td>\n",
       "      <td>2018-05-28</td>\n",
       "      <td>14.30</td>\n",
       "      <td>1081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>137401</td>\n",
       "      <td>1352_125</td>\n",
       "      <td>2018-09-22</td>\n",
       "      <td>6.35</td>\n",
       "      <td>1352</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>148415</td>\n",
       "      <td>1375_1246</td>\n",
       "      <td>2018-06-23</td>\n",
       "      <td>3.11</td>\n",
       "      <td>1375</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               id   call_date  duration  user_id\n",
       "78645    1196_877  2018-06-09     13.51     1196\n",
       "51135    1126_698  2018-02-20      4.47     1126\n",
       "33261    1081_506  2018-05-28     14.30     1081\n",
       "137401   1352_125  2018-09-22      6.35     1352\n",
       "148415  1375_1246  2018-06-23      3.11     1375"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(calls.sample(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 302,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 149396 entries, 0 to 149395\n",
      "Data columns (total 5 columns):\n",
      "Unnamed: 0      149396 non-null int64\n",
      "id              149396 non-null object\n",
      "mb_used         149396 non-null float64\n",
      "session_date    149396 non-null object\n",
      "user_id         149396 non-null int64\n",
      "dtypes: float64(1), int64(2), object(2)\n",
      "memory usage: 5.7+ MB\n"
     ]
    }
   ],
   "source": [
    "internet = pd.read_csv('/datasets/internet.csv')\n",
    "internet.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Понизим разрядность столбцов mb_used и user_id для оптимизации работы кода."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 303,
   "metadata": {},
   "outputs": [],
   "source": [
    "internet['mb_used'] = pd.to_numeric(internet['mb_used'], downcast='float')\n",
    "internet['user_id'] = pd.to_numeric(internet['user_id'], downcast='signed')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 304,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>id</th>\n",
       "      <th>mb_used</th>\n",
       "      <th>session_date</th>\n",
       "      <th>user_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>37052</td>\n",
       "      <td>37052</td>\n",
       "      <td>1129_2</td>\n",
       "      <td>329.859985</td>\n",
       "      <td>2018-12-26</td>\n",
       "      <td>1129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>24655</td>\n",
       "      <td>24655</td>\n",
       "      <td>1085_24</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2018-08-11</td>\n",
       "      <td>1085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>146646</td>\n",
       "      <td>146646</td>\n",
       "      <td>1490_389</td>\n",
       "      <td>102.930000</td>\n",
       "      <td>2018-05-04</td>\n",
       "      <td>1490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>27734</td>\n",
       "      <td>27734</td>\n",
       "      <td>1097_40</td>\n",
       "      <td>391.709991</td>\n",
       "      <td>2018-12-28</td>\n",
       "      <td>1097</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>26602</td>\n",
       "      <td>26602</td>\n",
       "      <td>1092_268</td>\n",
       "      <td>958.969971</td>\n",
       "      <td>2018-07-23</td>\n",
       "      <td>1092</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Unnamed: 0        id     mb_used session_date  user_id\n",
       "37052        37052    1129_2  329.859985   2018-12-26     1129\n",
       "24655        24655   1085_24    0.000000   2018-08-11     1085\n",
       "146646      146646  1490_389  102.930000   2018-05-04     1490\n",
       "27734        27734   1097_40  391.709991   2018-12-28     1097\n",
       "26602        26602  1092_268  958.969971   2018-07-23     1092"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(internet.sample(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 305,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 123036 entries, 0 to 123035\n",
      "Data columns (total 3 columns):\n",
      "id              123036 non-null object\n",
      "message_date    123036 non-null object\n",
      "user_id         123036 non-null int64\n",
      "dtypes: int64(1), object(2)\n",
      "memory usage: 2.8+ MB\n"
     ]
    }
   ],
   "source": [
    "messages = pd.read_csv('/datasets/messages.csv')\n",
    "messages.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Понизим разрядность столбца user_id для оптимизации работы кода."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 306,
   "metadata": {},
   "outputs": [],
   "source": [
    "messages['user_id'] = pd.to_numeric(messages['user_id'], downcast='signed')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 307,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>message_date</th>\n",
       "      <th>user_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>77549</td>\n",
       "      <td>1327_46</td>\n",
       "      <td>2018-11-25</td>\n",
       "      <td>1327</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>36203</td>\n",
       "      <td>1158_8</td>\n",
       "      <td>2018-05-27</td>\n",
       "      <td>1158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23436</td>\n",
       "      <td>1096_716</td>\n",
       "      <td>2018-06-19</td>\n",
       "      <td>1096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>96564</td>\n",
       "      <td>1396_215</td>\n",
       "      <td>2018-06-11</td>\n",
       "      <td>1396</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>101670</td>\n",
       "      <td>1415_246</td>\n",
       "      <td>2018-07-14</td>\n",
       "      <td>1415</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              id message_date  user_id\n",
       "77549    1327_46   2018-11-25     1327\n",
       "36203     1158_8   2018-05-27     1158\n",
       "23436   1096_716   2018-06-19     1096\n",
       "96564   1396_215   2018-06-11     1396\n",
       "101670  1415_246   2018-07-14     1415"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(messages.sample(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2 entries, 0 to 1\n",
      "Data columns (total 8 columns):\n",
      "messages_included        2 non-null int64\n",
      "mb_per_month_included    2 non-null int64\n",
      "minutes_included         2 non-null int64\n",
      "rub_monthly_fee          2 non-null int64\n",
      "rub_per_gb               2 non-null int64\n",
      "rub_per_message          2 non-null int64\n",
      "rub_per_minute           2 non-null int64\n",
      "tariff_name              2 non-null object\n",
      "dtypes: int64(7), object(1)\n",
      "memory usage: 256.0+ bytes\n"
     ]
    }
   ],
   "source": [
    "tariffs = pd.read_csv('/datasets/tariffs.csv')\n",
    "tariffs.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 309,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>messages_included</th>\n",
       "      <th>mb_per_month_included</th>\n",
       "      <th>minutes_included</th>\n",
       "      <th>rub_monthly_fee</th>\n",
       "      <th>rub_per_gb</th>\n",
       "      <th>rub_per_message</th>\n",
       "      <th>rub_per_minute</th>\n",
       "      <th>tariff_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>550</td>\n",
       "      <td>200</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>smart</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>1950</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>ultra</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   messages_included  mb_per_month_included  minutes_included  \\\n",
       "0                 50                  15360               500   \n",
       "1               1000                  30720              3000   \n",
       "\n",
       "   rub_monthly_fee  rub_per_gb  rub_per_message  rub_per_minute tariff_name  \n",
       "0              550         200                3               3       smart  \n",
       "1             1950         150                1               1       ultra  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(tariffs)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Переименуем название последнего столбца 'tariff_name' на 'tariff'для упрощения дальнейшей работы."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 310,
   "metadata": {},
   "outputs": [],
   "source": [
    "tariffs.columns = ['messages_included', 'mb_per_month_included', 'minutes_included', 'rub_monthly_fee', \n",
    "                'rub_per_gb', 'rub_per_message', 'rub_per_minute', 'tariff']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 311,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 500 entries, 0 to 499\n",
      "Data columns (total 8 columns):\n",
      "user_id       500 non-null int64\n",
      "age           500 non-null int64\n",
      "churn_date    38 non-null object\n",
      "city          500 non-null object\n",
      "first_name    500 non-null object\n",
      "last_name     500 non-null object\n",
      "reg_date      500 non-null object\n",
      "tariff        500 non-null object\n",
      "dtypes: int64(2), object(6)\n",
      "memory usage: 31.4+ KB\n"
     ]
    }
   ],
   "source": [
    "users = pd.read_csv('/datasets/users.csv')\n",
    "users.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Понизим разрядность столбцов user_id и age для оптимизации работы кода."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 312,
   "metadata": {},
   "outputs": [],
   "source": [
    "users['user_id'] = pd.to_numeric(users['user_id'], downcast='signed')\n",
    "users['age'] = pd.to_numeric(users['age'], downcast='signed')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 313,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>age</th>\n",
       "      <th>churn_date</th>\n",
       "      <th>city</th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "      <th>reg_date</th>\n",
       "      <th>tariff</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>479</td>\n",
       "      <td>1479</td>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Хабаровск</td>\n",
       "      <td>Игорь</td>\n",
       "      <td>Богданов</td>\n",
       "      <td>2018-07-03</td>\n",
       "      <td>smart</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>398</td>\n",
       "      <td>1398</td>\n",
       "      <td>58</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Махачкала</td>\n",
       "      <td>Рауль</td>\n",
       "      <td>Ахмедов</td>\n",
       "      <td>2018-12-06</td>\n",
       "      <td>smart</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>469</td>\n",
       "      <td>1469</td>\n",
       "      <td>41</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Сочи</td>\n",
       "      <td>Аксён</td>\n",
       "      <td>Абалкин</td>\n",
       "      <td>2018-07-06</td>\n",
       "      <td>ultra</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>1008</td>\n",
       "      <td>63</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Челябинск</td>\n",
       "      <td>Рустэм</td>\n",
       "      <td>Пономарёв</td>\n",
       "      <td>2018-12-19</td>\n",
       "      <td>smart</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>419</td>\n",
       "      <td>1419</td>\n",
       "      <td>19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Новороссийск</td>\n",
       "      <td>Эльмира</td>\n",
       "      <td>Яшина</td>\n",
       "      <td>2018-07-19</td>\n",
       "      <td>smart</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     user_id  age churn_date          city first_name  last_name    reg_date  \\\n",
       "479     1479   40        NaN     Хабаровск      Игорь   Богданов  2018-07-03   \n",
       "398     1398   58        NaN     Махачкала      Рауль    Ахмедов  2018-12-06   \n",
       "469     1469   41        NaN          Сочи      Аксён    Абалкин  2018-07-06   \n",
       "8       1008   63        NaN     Челябинск     Рустэм  Пономарёв  2018-12-19   \n",
       "419     1419   19        NaN  Новороссийск    Эльмира      Яшина  2018-07-19   \n",
       "\n",
       "    tariff  \n",
       "479  smart  \n",
       "398  smart  \n",
       "469  ultra  \n",
       "8    smart  \n",
       "419  smart  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(users.sample(5))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "У нас имеются 5 таблиц с данными: \n",
    "- calls (информация о звонках), \n",
    "- internet (информация об интернет-сессиях), \n",
    "- messages (информация о сообщениях), \n",
    "- tariffs (информация о тарифах),\n",
    "- users (информация о пользователях)\n",
    "\n",
    "    Для дальнейшей работы необходимо объединить данные таблицы в одну, сгруппировав информацию по месяцам, уникальным пользователям и сумме израсходованных минут, использованных мегабайт и количеству отправленных сообщений."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Шаг 2. Подготовьте данные <a class=\"anchor\" id=\"step2\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Таблица calls**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 314,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 202607 entries, 0 to 202606\n",
      "Data columns (total 4 columns):\n",
      "id           202607 non-null object\n",
      "call_date    202607 non-null object\n",
      "duration     202607 non-null float32\n",
      "user_id      202607 non-null int16\n",
      "dtypes: float32(1), int16(1), object(2)\n",
      "memory usage: 4.3+ MB\n"
     ]
    }
   ],
   "source": [
    "calls.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 315,
   "metadata": {},
   "outputs": [],
   "source": [
    "calls['month'] = pd.DatetimeIndex(calls['call_date']).month #Нахождение месяца звонка"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Поскольку в условии было обозначено, что «Мегалайн» всегда округляет вверх значения минут и мегабайтов, поэтому округляем продолжительность разговора в минутах в бОльшую сторону."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 316,
   "metadata": {},
   "outputs": [],
   "source": [
    "calls['duration_round'] = calls['duration'].map(math.ceil) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 317,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Количество звонков со значением 0 минут: 19.55%\n"
     ]
    }
   ],
   "source": [
    "print('Количество звонков со значением 0 минут: {:.2%}'.format(len(calls[calls['duration'] <= 0])/len(calls['duration'])))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В данных почти 20% звонков со значением 0 минут (а мы не знаем природу появления данных нулей - это может быть как пропущенные звонки, так и ошибки в данных). Допустим таким образом обозначены пропущенные звонки, поскольку мы будем считать суммарное количество минут каждого абонента по месяцам, пропущенные значения не должны сильно исказить результат."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 318,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>call_date</th>\n",
       "      <th>duration</th>\n",
       "      <th>user_id</th>\n",
       "      <th>month</th>\n",
       "      <th>duration_round</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1000_0</td>\n",
       "      <td>2018-07-25</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1000</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1000_1</td>\n",
       "      <td>2018-08-17</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1000</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>1000_2</td>\n",
       "      <td>2018-06-11</td>\n",
       "      <td>2.850000</td>\n",
       "      <td>1000</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>1000_3</td>\n",
       "      <td>2018-09-21</td>\n",
       "      <td>13.800000</td>\n",
       "      <td>1000</td>\n",
       "      <td>9</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>1000_4</td>\n",
       "      <td>2018-12-15</td>\n",
       "      <td>5.180000</td>\n",
       "      <td>1000</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>1000_5</td>\n",
       "      <td>2018-11-02</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1000</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>1000_6</td>\n",
       "      <td>2018-10-18</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1000</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>1000_7</td>\n",
       "      <td>2018-08-22</td>\n",
       "      <td>18.309999</td>\n",
       "      <td>1000</td>\n",
       "      <td>8</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>1000_8</td>\n",
       "      <td>2018-09-15</td>\n",
       "      <td>18.440001</td>\n",
       "      <td>1000</td>\n",
       "      <td>9</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>1000_9</td>\n",
       "      <td>2018-08-15</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1000</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>1000_10</td>\n",
       "      <td>2018-08-22</td>\n",
       "      <td>5.030000</td>\n",
       "      <td>1000</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>1000_11</td>\n",
       "      <td>2018-05-28</td>\n",
       "      <td>18.820000</td>\n",
       "      <td>1000</td>\n",
       "      <td>5</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>1000_12</td>\n",
       "      <td>2018-07-05</td>\n",
       "      <td>2.020000</td>\n",
       "      <td>1000</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>1000_13</td>\n",
       "      <td>2018-09-29</td>\n",
       "      <td>7.150000</td>\n",
       "      <td>1000</td>\n",
       "      <td>9</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>1000_14</td>\n",
       "      <td>2018-12-11</td>\n",
       "      <td>9.130000</td>\n",
       "      <td>1000</td>\n",
       "      <td>12</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>1000_15</td>\n",
       "      <td>2018-07-27</td>\n",
       "      <td>9.360000</td>\n",
       "      <td>1000</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>1000_16</td>\n",
       "      <td>2018-08-11</td>\n",
       "      <td>4.080000</td>\n",
       "      <td>1000</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>1000_17</td>\n",
       "      <td>2018-08-02</td>\n",
       "      <td>12.630000</td>\n",
       "      <td>1000</td>\n",
       "      <td>8</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18</td>\n",
       "      <td>1000_18</td>\n",
       "      <td>2018-06-15</td>\n",
       "      <td>4.460000</td>\n",
       "      <td>1000</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19</td>\n",
       "      <td>1000_19</td>\n",
       "      <td>2018-11-02</td>\n",
       "      <td>15.080000</td>\n",
       "      <td>1000</td>\n",
       "      <td>11</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         id   call_date   duration  user_id  month  duration_round\n",
       "0    1000_0  2018-07-25   0.000000     1000      7               0\n",
       "1    1000_1  2018-08-17   0.000000     1000      8               0\n",
       "2    1000_2  2018-06-11   2.850000     1000      6               3\n",
       "3    1000_3  2018-09-21  13.800000     1000      9              14\n",
       "4    1000_4  2018-12-15   5.180000     1000     12               6\n",
       "5    1000_5  2018-11-02   0.000000     1000     11               0\n",
       "6    1000_6  2018-10-18   0.000000     1000     10               0\n",
       "7    1000_7  2018-08-22  18.309999     1000      8              19\n",
       "8    1000_8  2018-09-15  18.440001     1000      9              19\n",
       "9    1000_9  2018-08-15   0.000000     1000      8               0\n",
       "10  1000_10  2018-08-22   5.030000     1000      8               6\n",
       "11  1000_11  2018-05-28  18.820000     1000      5              19\n",
       "12  1000_12  2018-07-05   2.020000     1000      7               3\n",
       "13  1000_13  2018-09-29   7.150000     1000      9               8\n",
       "14  1000_14  2018-12-11   9.130000     1000     12              10\n",
       "15  1000_15  2018-07-27   9.360000     1000      7              10\n",
       "16  1000_16  2018-08-11   4.080000     1000      8               5\n",
       "17  1000_17  2018-08-02  12.630000     1000      8              13\n",
       "18  1000_18  2018-06-15   4.460000     1000      6               5\n",
       "19  1000_19  2018-11-02  15.080000     1000     11              16"
      ]
     },
     "execution_count": 318,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "calls.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 319,
   "metadata": {},
   "outputs": [],
   "source": [
    "calls_pivot = calls.pivot_table(index = ['user_id', 'month'], values = 'duration_round', aggfunc = ['count', 'sum'])\n",
    "calls_pivot = calls_pivot.reset_index()\n",
    "calls_pivot.columns = ['user_id', 'month', 'calls_count', 'duration_calls_sum']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 320,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>month</th>\n",
       "      <th>calls_count</th>\n",
       "      <th>duration_calls_sum</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1000</td>\n",
       "      <td>5</td>\n",
       "      <td>22</td>\n",
       "      <td>159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1000</td>\n",
       "      <td>6</td>\n",
       "      <td>43</td>\n",
       "      <td>172</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>1000</td>\n",
       "      <td>7</td>\n",
       "      <td>47</td>\n",
       "      <td>340</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>1000</td>\n",
       "      <td>8</td>\n",
       "      <td>52</td>\n",
       "      <td>408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>1000</td>\n",
       "      <td>9</td>\n",
       "      <td>58</td>\n",
       "      <td>466</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   user_id  month  calls_count  duration_calls_sum\n",
       "0     1000      5           22                 159\n",
       "1     1000      6           43                 172\n",
       "2     1000      7           47                 340\n",
       "3     1000      8           52                 408\n",
       "4     1000      9           58                 466"
      ]
     },
     "execution_count": 320,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "calls_pivot.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 321,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>month</th>\n",
       "      <th>calls_count</th>\n",
       "      <th>duration_calls_sum</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>1493</td>\n",
       "      <td>1240</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1605</td>\n",
       "      <td>1257</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1606</td>\n",
       "      <td>1257</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1607</td>\n",
       "      <td>1257</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2318</td>\n",
       "      <td>1373</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2321</td>\n",
       "      <td>1373</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      user_id  month  calls_count  duration_calls_sum\n",
       "1493     1240      2            2                   0\n",
       "1605     1257      7            1                   0\n",
       "1606     1257      8            2                   0\n",
       "1607     1257      9            1                   0\n",
       "2318     1373      1            2                   0\n",
       "2321     1373      4            1                   0"
      ]
     },
     "execution_count": 321,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "calls_pivot[calls_pivot['duration_calls_sum'] == 0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Получили, что у нескольких абонентов за месяц не было ни одной проговоренной минуты, а таких абонентов 3 шт - с user_id 1240, 1257, 1373. Количество звонков за месяц у них также небольшое - 1 или 2. Можно предположить, что возможно люди в эти месяцы куда-то уезжали и не разговаривали по мобильному телефону, либо у них 2 телефона и они используют один из них исключительно для интернета и т.д."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 322,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = calls_pivot.groupby(calls_pivot['month']).agg({'calls_count': 'count', 'duration_calls_sum': 'median'}).\\\n",
    "     plot.bar(figsize=(15, 7), rot=0, width=0.7)\n",
    "ax.set_title('График суммарного количества уникальных пользователей и медианных значений продолжительности звонков', size=18)\n",
    "ax.set_xlabel('Номер месяца')\n",
    "ax.set_ylabel('Количество звонков и медианное количество минут')\n",
    "ax.set_ylim(None, 600)\n",
    "\n",
    "for p in ax.patches:\n",
    "    ax.annotate(str(round(p.get_height())), (p.get_x() * 1, p.get_height() * 1.03))\n",
    "    \n",
    "plt.show()    \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "По графику видим, что количество уникальных пользователей каждый месяц линейно растет. Наибольшее медианное значение суммарного количества использованных минут составляет 492 в декабре месяце, а наименьшее медианное количество минут составляет 230 в январе месяце. По графику видим, что с каждым месяцем привлекается все больше клиентов."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 323,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,5))\n",
    "plt.title('Количество звонков в зависимости от месяца', size=16)\n",
    "ax= calls_pivot.groupby(calls_pivot['month'])['calls_count'].sum().plot(kind='bar', rot=0)\n",
    "for p in ax.patches:\n",
    "    ax.annotate(str(round(p.get_height())), (p.get_x() * 1, p.get_height() * 1.03))\n",
    "plt.xlabel('Номер месяца')\n",
    "plt.ylabel('Количество звонков')\n",
    "plt.ylim(None, 36000)\n",
    "plt.show()\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Также наблюдается линейный рост количества звонков от месяца к месяцу (скорее всего из-за увелечения количества абонентов)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Напишем функцию для автоматического построения графиков:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 324,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_subs(feature, data,\n",
    "              suptitle, title1, title2, xlabel1, xlabel2, ylabel1, ylabel2, xlim=None):\n",
    "    '''\n",
    "    input:\n",
    "        feature - название исследуемого признака\n",
    "        data - данные, по которым строим график\n",
    "        suptitle - наименование графиков\n",
    "        title1, title2 - название гистограммы и боксплота\n",
    "        xlabel1, xlabel2 - название оси X гистограммы и боксплота\n",
    "        ylabel1, ylabel2 - название оси Y гистограммы и боксплота,\n",
    "        xlim - ограничение по оси X\n",
    "    output:\n",
    "        None\n",
    "    '''\n",
    "    fig, axs = plt.subplots(1, 2, figsize=(18,7))\n",
    "    plt.suptitle(suptitle, size=18)\n",
    "    \n",
    "#Построение гистограммы\n",
    "    data[feature].hist(bins=100, edgecolor='black', ax=axs[0])\n",
    "    axs[0].set_title(title1, size=15)\n",
    "    axs[0].set_xlabel(xlabel1, size=13)\n",
    "    axs[0].set_ylabel(ylabel1, size=13)\n",
    "    \n",
    "#Построение боксплота\n",
    "    sns.boxplot(x=feature, data=data, ax=axs[1])\n",
    "    axs[1].set_title(title2, size=15)\n",
    "    axs[1].set_xlabel(xlabel2, size=13)\n",
    "    axs[1].set_ylabel(ylabel2, size=13)\n",
    "    \n",
    "    if xlim is not None:\n",
    "        axs[0].set_xlim(xlim)\n",
    "        axs[1].set_xlim(xlim)\n",
    "\n",
    "    plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Построим гистограмму и боксплот распределения израсходованных минут."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 325,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x504 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_subs('duration_calls_sum', calls_pivot, 'Распределение проговоренных минут', \n",
    "          'Гистограмма распределения суммарного количества минут', 'Диаграмма размаха рапределения суммарного количества минут', \n",
    "          'Суммарное количество минут', 'Суммарное количество минут', \n",
    "          'Количество абонентов', 'Количество абонентов')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "По гистограмме видим, что наибольшее количество абонентов использует почти 500 минут в сумме, по диаграмме размаха можно сказать, что нормальные значения минут находятся в диапазоне от 0 до 1050 минут, все значения выходящие за данную отметку - выбросы."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 326,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 3174 entries, 0 to 3173\n",
      "Data columns (total 4 columns):\n",
      "user_id               3174 non-null int64\n",
      "month                 3174 non-null int64\n",
      "calls_count           3174 non-null int64\n",
      "duration_calls_sum    3174 non-null int64\n",
      "dtypes: int64(4)\n",
      "memory usage: 99.3 KB\n"
     ]
    }
   ],
   "source": [
    "calls_pivot.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Таблица internet**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 327,
   "metadata": {},
   "outputs": [],
   "source": [
    "internet['month'] = pd.DatetimeIndex(internet['session_date']).month #Нахождение месяца интернет сессии"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 328,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>id</th>\n",
       "      <th>mb_used</th>\n",
       "      <th>session_date</th>\n",
       "      <th>user_id</th>\n",
       "      <th>month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>109076</td>\n",
       "      <td>109076</td>\n",
       "      <td>1372_444</td>\n",
       "      <td>407.470001</td>\n",
       "      <td>2018-05-29</td>\n",
       "      <td>1372</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>144891</td>\n",
       "      <td>144891</td>\n",
       "      <td>1483_270</td>\n",
       "      <td>519.119995</td>\n",
       "      <td>2018-04-26</td>\n",
       "      <td>1483</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>83023</td>\n",
       "      <td>83023</td>\n",
       "      <td>1282_97</td>\n",
       "      <td>252.869995</td>\n",
       "      <td>2018-06-21</td>\n",
       "      <td>1282</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9224</td>\n",
       "      <td>9224</td>\n",
       "      <td>1032_304</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2018-05-03</td>\n",
       "      <td>1032</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>86846</td>\n",
       "      <td>86846</td>\n",
       "      <td>1294_188</td>\n",
       "      <td>532.239990</td>\n",
       "      <td>2018-09-26</td>\n",
       "      <td>1294</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Unnamed: 0        id     mb_used session_date  user_id  month\n",
       "109076      109076  1372_444  407.470001   2018-05-29     1372      5\n",
       "144891      144891  1483_270  519.119995   2018-04-26     1483      4\n",
       "83023        83023   1282_97  252.869995   2018-06-21     1282      6\n",
       "9224          9224  1032_304    0.000000   2018-05-03     1032      5\n",
       "86846        86846  1294_188  532.239990   2018-09-26     1294      9"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(internet.sample(5))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Поскольку в условии было обозначено, что «Мегалайн» всегда округляет вверх значения минут и мегабайтов, поэтому округляем мегабайты в бОльшую сторону."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 329,
   "metadata": {},
   "outputs": [],
   "source": [
    "internet['mb_used_round'] = internet['mb_used'].map(math.ceil)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 330,
   "metadata": {},
   "outputs": [],
   "source": [
    "internet_pivot = internet.pivot_table(index=['user_id', 'month'], values = 'mb_used_round', aggfunc = ['count', 'sum'])\n",
    "internet_pivot = internet_pivot.reset_index()\n",
    "internet_pivot.columns = ['user_id', 'month', 'count_mb', 'mb_used_round_sum']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 331,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>month</th>\n",
       "      <th>count_mb</th>\n",
       "      <th>mb_used_round_sum</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>592</td>\n",
       "      <td>1094</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2298</td>\n",
       "      <td>1365</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      user_id  month  count_mb  mb_used_round_sum\n",
       "592      1094      5         1                  0\n",
       "2298     1365     10         1                  0"
      ]
     },
     "execution_count": 331,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "internet_pivot[internet_pivot['mb_used_round_sum'] == 0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "2 абонента  вообще не расходовали мегабайты интернета в течение месяца."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 332,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,5))\n",
    "plt.title('Медианное значение объема трафика в зависимости от месяца', size = 18)\n",
    "ax = internet_pivot.groupby(internet_pivot['month'])['mb_used_round_sum'].median().plot(kind='bar', rot=0)\n",
    "for p in ax.patches:\n",
    "    ax.annotate(str(round(p.get_height())), (p.get_x() * 1, p.get_height() * 1.03))\n",
    "plt.xlabel('Номер месяца')\n",
    "plt.ylabel('Медианное значение объема трафика')\n",
    "plt.ylim(None, 20000)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "По графику видим, что наибольшее медианное значение израсходованного интернета 18 ГБ было в декабре, в январе же было наименьшее медианное значение израсходованного интернета - почти 8 ГБ."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Построим гистограмму и боксплот."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 333,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x504 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_subs('mb_used_round_sum', internet_pivot, 'Распределение израсходованного трафика интернета', \n",
    "          'Гистограмма распределения израсходованного интернета', 'Диаграмма размаха израсходованного интернета', \n",
    "          'Суммарный объем израсходованного трафика интернета', 'Суммарный объем израсходованного трафика интернета', \n",
    "          'Количество абонентов', 'Количество абонентов')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Из графика \"Гистограмма распределения израсходованного интернета\" видим, что наибольшее количество абонентов используют примерно 15 ГБ трафика. Гистограмма имеет форму колокола и стремится к нормальному распределению. Нормальные значения суммарного объема израсходованного трафика находятся в диапазоне от 0 до 35 ГБ. Все, что находится за пределами 35 ГБ будет являться выбросами"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 334,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 3203 entries, 0 to 3202\n",
      "Data columns (total 4 columns):\n",
      "user_id              3203 non-null int64\n",
      "month                3203 non-null int64\n",
      "count_mb             3203 non-null int64\n",
      "mb_used_round_sum    3203 non-null int64\n",
      "dtypes: int64(4)\n",
      "memory usage: 100.2 KB\n"
     ]
    }
   ],
   "source": [
    "internet_pivot.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Соединим таблицу internet_pivot с calls_pivot."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 335,
   "metadata": {},
   "outputs": [],
   "source": [
    "internet_merge = calls_pivot.merge(internet_pivot, on=['user_id', 'month'], how='outer')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Таблица messages**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 336,
   "metadata": {},
   "outputs": [],
   "source": [
    "messages['month'] = pd.DatetimeIndex(messages['message_date']).month #Нахождение месяца, когда было отправлено сообщение"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 337,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>message_date</th>\n",
       "      <th>user_id</th>\n",
       "      <th>month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>19119</td>\n",
       "      <td>1083_308</td>\n",
       "      <td>2018-12-21</td>\n",
       "      <td>1083</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21153</td>\n",
       "      <td>1089_1156</td>\n",
       "      <td>2018-04-13</td>\n",
       "      <td>1089</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>69229</td>\n",
       "      <td>1295_323</td>\n",
       "      <td>2018-11-07</td>\n",
       "      <td>1295</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>60439</td>\n",
       "      <td>1266_47</td>\n",
       "      <td>2018-12-09</td>\n",
       "      <td>1266</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22631</td>\n",
       "      <td>1094_79</td>\n",
       "      <td>2018-12-04</td>\n",
       "      <td>1094</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              id message_date  user_id  month\n",
       "19119   1083_308   2018-12-21     1083     12\n",
       "21153  1089_1156   2018-04-13     1089      4\n",
       "69229   1295_323   2018-11-07     1295     11\n",
       "60439    1266_47   2018-12-09     1266     12\n",
       "22631    1094_79   2018-12-04     1094     12"
      ]
     },
     "execution_count": 337,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "messages.sample(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Создание сводной таблицы для анализа количества сообщений."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 338,
   "metadata": {},
   "outputs": [],
   "source": [
    "messages['user_id1'] = messages['user_id']\n",
    "messages_pivot = messages.pivot_table(index=['user_id', 'month'], values='user_id1', aggfunc='count')\n",
    "messages_pivot = messages_pivot.reset_index()\n",
    "messages_pivot.columns = ['user_id', 'month', 'messages_count']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 339,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,5))\n",
    "plt.title('График медианного количества сообщений в зависимости от месяца', size = 18)\n",
    "ax = messages_pivot.groupby(messages_pivot['month'])['messages_count'].median().plot(kind='bar', rot=0)\n",
    "for p in ax.patches:\n",
    "    ax.annotate(str(round(p.get_height())), (p.get_x() * 1, p.get_height() * 1.03))\n",
    "plt.xlabel('Номер месяца')\n",
    "plt.ylabel('Медианное значение количества сообщений')\n",
    "plt.ylim(None, 50)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Наибольшее среднее значение по отправленным смс сообщениям наблюдается в январе 44 шт в месяц, при этом наименьшее медианное значение наблюдается в январе - 22 сообщения в месяц."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 340,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x504 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_subs('messages_count', messages_pivot, 'Распределение отправленных сообщений', \n",
    "          'Гистограмма распределения количества сообщений', 'Диаграмма размаха рапределения суммарного количества отправленных смс', \n",
    "          'Суммарное количество отправленных смс', 'Суммарное количество отправленных смс', \n",
    "          'Количество абонентов', 'Количество абонентов')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Наибольшее количество абонентов отправляют в месяц примерно 25 сообщений. Нормальные значения количества отправленных смсм сообщений сосредоточены в диапазоне от 1 до 60 сообщений. Все, что свыше этого диапазона - выбросы. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Соединим таблицу messages_pivot с таблицей internet_merge."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 341,
   "metadata": {},
   "outputs": [],
   "source": [
    "messages_merge = internet_merge.merge(messages_pivot, on=[ 'user_id', 'month'], how='outer')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Далее соединим таблицу messages_merge с таблицей users."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 342,
   "metadata": {},
   "outputs": [],
   "source": [
    "users_merge = messages_merge.merge(users, on='user_id', how='left')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "И, объединим получившуюся таблицу с таблицей tariffs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 343,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = users_merge.merge(tariffs, on='tariff', how='left')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим таблицу, которая получилась."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 344,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>month</th>\n",
       "      <th>calls_count</th>\n",
       "      <th>duration_calls_sum</th>\n",
       "      <th>count_mb</th>\n",
       "      <th>mb_used_round_sum</th>\n",
       "      <th>messages_count</th>\n",
       "      <th>age</th>\n",
       "      <th>churn_date</th>\n",
       "      <th>city</th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "      <th>reg_date</th>\n",
       "      <th>tariff</th>\n",
       "      <th>messages_included</th>\n",
       "      <th>mb_per_month_included</th>\n",
       "      <th>minutes_included</th>\n",
       "      <th>rub_monthly_fee</th>\n",
       "      <th>rub_per_gb</th>\n",
       "      <th>rub_per_message</th>\n",
       "      <th>rub_per_minute</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>1596</td>\n",
       "      <td>1255</td>\n",
       "      <td>6</td>\n",
       "      <td>32.0</td>\n",
       "      <td>198.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>37635.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>40</td>\n",
       "      <td>2018-09-02</td>\n",
       "      <td>Саранск</td>\n",
       "      <td>Серафима</td>\n",
       "      <td>Пономарева</td>\n",
       "      <td>2018-02-19</td>\n",
       "      <td>ultra</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>1950</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1423</td>\n",
       "      <td>1226</td>\n",
       "      <td>7</td>\n",
       "      <td>31.0</td>\n",
       "      <td>256.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>9671.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Новосибирск</td>\n",
       "      <td>Альбин</td>\n",
       "      <td>Бобылёв</td>\n",
       "      <td>2018-06-01</td>\n",
       "      <td>ultra</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>1950</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2728</td>\n",
       "      <td>1429</td>\n",
       "      <td>3</td>\n",
       "      <td>47.0</td>\n",
       "      <td>357.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>23752.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Санкт-Петербург</td>\n",
       "      <td>Джулия</td>\n",
       "      <td>Белякова</td>\n",
       "      <td>2018-01-26</td>\n",
       "      <td>smart</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>550</td>\n",
       "      <td>200</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1304</td>\n",
       "      <td>1206</td>\n",
       "      <td>12</td>\n",
       "      <td>16.0</td>\n",
       "      <td>106.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>8630.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>35</td>\n",
       "      <td>2018-12-20</td>\n",
       "      <td>Москва</td>\n",
       "      <td>Елена</td>\n",
       "      <td>Шарапова</td>\n",
       "      <td>2018-11-03</td>\n",
       "      <td>smart</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>550</td>\n",
       "      <td>200</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2122</td>\n",
       "      <td>1339</td>\n",
       "      <td>8</td>\n",
       "      <td>45.0</td>\n",
       "      <td>301.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>11534.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>52</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Москва</td>\n",
       "      <td>Григорий</td>\n",
       "      <td>Вишневский</td>\n",
       "      <td>2018-08-14</td>\n",
       "      <td>smart</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>550</td>\n",
       "      <td>200</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1512</td>\n",
       "      <td>1242</td>\n",
       "      <td>11</td>\n",
       "      <td>28.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>4935.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>39</td>\n",
       "      <td>2018-12-21</td>\n",
       "      <td>Хабаровск</td>\n",
       "      <td>Радим</td>\n",
       "      <td>Федосеев</td>\n",
       "      <td>2018-11-18</td>\n",
       "      <td>smart</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>550</td>\n",
       "      <td>200</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2552</td>\n",
       "      <td>1402</td>\n",
       "      <td>8</td>\n",
       "      <td>90.0</td>\n",
       "      <td>671.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>31600.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>23</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Пенза</td>\n",
       "      <td>Мариетта</td>\n",
       "      <td>Измайлова</td>\n",
       "      <td>2018-03-09</td>\n",
       "      <td>ultra</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>1950</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>759</td>\n",
       "      <td>1120</td>\n",
       "      <td>11</td>\n",
       "      <td>36.0</td>\n",
       "      <td>310.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>12569.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Краснодар</td>\n",
       "      <td>Агнесса</td>\n",
       "      <td>Абдулина</td>\n",
       "      <td>2018-01-24</td>\n",
       "      <td>ultra</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>1950</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>875</td>\n",
       "      <td>1143</td>\n",
       "      <td>4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2570.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>64</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Пермь</td>\n",
       "      <td>Арсен</td>\n",
       "      <td>Покровский</td>\n",
       "      <td>2018-04-27</td>\n",
       "      <td>ultra</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>1950</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>876</td>\n",
       "      <td>1143</td>\n",
       "      <td>5</td>\n",
       "      <td>91.0</td>\n",
       "      <td>746.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>20956.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>64</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Пермь</td>\n",
       "      <td>Арсен</td>\n",
       "      <td>Покровский</td>\n",
       "      <td>2018-04-27</td>\n",
       "      <td>ultra</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>1950</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      user_id  month  calls_count  duration_calls_sum  count_mb  \\\n",
       "1596     1255      6         32.0               198.0      72.0   \n",
       "1423     1226      7         31.0               256.0      22.0   \n",
       "2728     1429      3         47.0               357.0      72.0   \n",
       "1304     1206     12         16.0               106.0      22.0   \n",
       "2122     1339      8         45.0               301.0      33.0   \n",
       "1512     1242     11         28.0               192.0      15.0   \n",
       "2552     1402      8         90.0               671.0      62.0   \n",
       "759      1120     11         36.0               310.0      21.0   \n",
       "875      1143      4         10.0                65.0       5.0   \n",
       "876      1143      5         91.0               746.0      46.0   \n",
       "\n",
       "      mb_used_round_sum  messages_count  age  churn_date             city  \\\n",
       "1596            37635.0             NaN   40  2018-09-02          Саранск   \n",
       "1423             9671.0            95.0   19         NaN      Новосибирск   \n",
       "2728            23752.0             NaN   54         NaN  Санкт-Петербург   \n",
       "1304             8630.0             8.0   35  2018-12-20           Москва   \n",
       "2122            11534.0             NaN   52         NaN           Москва   \n",
       "1512             4935.0             NaN   39  2018-12-21        Хабаровск   \n",
       "2552            31600.0            36.0   23         NaN            Пенза   \n",
       "759             12569.0             NaN   25         NaN        Краснодар   \n",
       "875              2570.0             NaN   64         NaN            Пермь   \n",
       "876             20956.0             NaN   64         NaN            Пермь   \n",
       "\n",
       "     first_name   last_name    reg_date tariff  messages_included  \\\n",
       "1596   Серафима  Пономарева  2018-02-19  ultra               1000   \n",
       "1423     Альбин     Бобылёв  2018-06-01  ultra               1000   \n",
       "2728     Джулия    Белякова  2018-01-26  smart                 50   \n",
       "1304      Елена    Шарапова  2018-11-03  smart                 50   \n",
       "2122   Григорий  Вишневский  2018-08-14  smart                 50   \n",
       "1512      Радим    Федосеев  2018-11-18  smart                 50   \n",
       "2552   Мариетта   Измайлова  2018-03-09  ultra               1000   \n",
       "759     Агнесса    Абдулина  2018-01-24  ultra               1000   \n",
       "875       Арсен  Покровский  2018-04-27  ultra               1000   \n",
       "876       Арсен  Покровский  2018-04-27  ultra               1000   \n",
       "\n",
       "      mb_per_month_included  minutes_included  rub_monthly_fee  rub_per_gb  \\\n",
       "1596                  30720              3000             1950         150   \n",
       "1423                  30720              3000             1950         150   \n",
       "2728                  15360               500              550         200   \n",
       "1304                  15360               500              550         200   \n",
       "2122                  15360               500              550         200   \n",
       "1512                  15360               500              550         200   \n",
       "2552                  30720              3000             1950         150   \n",
       "759                   30720              3000             1950         150   \n",
       "875                   30720              3000             1950         150   \n",
       "876                   30720              3000             1950         150   \n",
       "\n",
       "      rub_per_message  rub_per_minute  \n",
       "1596                1               1  \n",
       "1423                1               1  \n",
       "2728                3               3  \n",
       "1304                3               3  \n",
       "2122                3               3  \n",
       "1512                3               3  \n",
       "2552                1               1  \n",
       "759                 1               1  \n",
       "875                 1               1  \n",
       "876                 1               1  "
      ]
     },
     "execution_count": 344,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 345,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 3214 entries, 0 to 3213\n",
      "Data columns (total 21 columns):\n",
      "user_id                  3214 non-null int64\n",
      "month                    3214 non-null int64\n",
      "calls_count              3174 non-null float64\n",
      "duration_calls_sum       3174 non-null float64\n",
      "count_mb                 3203 non-null float64\n",
      "mb_used_round_sum        3203 non-null float64\n",
      "messages_count           2717 non-null float64\n",
      "age                      3214 non-null int8\n",
      "churn_date               187 non-null object\n",
      "city                     3214 non-null object\n",
      "first_name               3214 non-null object\n",
      "last_name                3214 non-null object\n",
      "reg_date                 3214 non-null object\n",
      "tariff                   3214 non-null object\n",
      "messages_included        3214 non-null int64\n",
      "mb_per_month_included    3214 non-null int64\n",
      "minutes_included         3214 non-null int64\n",
      "rub_monthly_fee          3214 non-null int64\n",
      "rub_per_gb               3214 non-null int64\n",
      "rub_per_message          3214 non-null int64\n",
      "rub_per_minute           3214 non-null int64\n",
      "dtypes: float64(5), int64(9), int8(1), object(6)\n",
      "memory usage: 1.8 MB\n"
     ]
    }
   ],
   "source": [
    "#Просмотр сколько памяти занимает обработка и количество пропусков в датафрейме\n",
    "df.info(memory_usage='deep')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 346,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Краснодар', 'Москва', 'Стерлитамак', 'Новокузнецк',\n",
       "       'Набережные Челны', 'Ульяновск', 'Челябинск', 'Пермь', 'Тюмень',\n",
       "       'Самара', 'Санкт-Петербург', 'Иваново', 'Чебоксары', 'Омск', 'Уфа',\n",
       "       'Томск', 'Чита', 'Мурманск', 'Петрозаводск', 'Тверь',\n",
       "       'Екатеринбург', 'Махачкала', 'Вологда', 'Череповец', 'Ярославль',\n",
       "       'Сочи', 'Хабаровск', 'Ставрополь', 'Рязань', 'Улан-Удэ', 'Тула',\n",
       "       'Саратов', 'Ростов-на-Дону', 'Казань', 'Иркутск', 'Курск',\n",
       "       'Калуга', 'Якутск', 'Астрахань', 'Химки', 'Владикавказ',\n",
       "       'Волгоград', 'Саранск', 'Ижевск', 'Новосибирск', 'Брянск',\n",
       "       'Тольятти', 'Нижний Тагил', 'Орёл', 'Белгород', 'Воронеж',\n",
       "       'Курган', 'Барнаул', 'Красноярск', 'Архангельск', 'Липецк',\n",
       "       'Кемерово', 'Киров', 'Сургут', 'Пенза', 'Волжский', 'Магнитогорск',\n",
       "       'Нижний Новгород', 'Кострома', 'Владивосток', 'Тамбов', 'Балашиха',\n",
       "       'Севастополь', 'Калининград', 'Оренбург', 'Смоленск',\n",
       "       'Нижневартовск', 'Владимир', 'Новороссийск', 'Грозный', 'Подольск'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 346,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['city'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 347,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>user_id</td>\n",
       "      <td>3214.0</td>\n",
       "      <td>1251.590230</td>\n",
       "      <td>144.659172</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>1125.0</td>\n",
       "      <td>1253.0</td>\n",
       "      <td>1378.75</td>\n",
       "      <td>1499.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>month</td>\n",
       "      <td>3214.0</td>\n",
       "      <td>8.317362</td>\n",
       "      <td>2.905413</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>11.00</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>calls_count</td>\n",
       "      <td>3174.0</td>\n",
       "      <td>63.833333</td>\n",
       "      <td>32.678036</td>\n",
       "      <td>1.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>83.00</td>\n",
       "      <td>244.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>duration_calls_sum</td>\n",
       "      <td>3174.0</td>\n",
       "      <td>456.931632</td>\n",
       "      <td>238.031270</td>\n",
       "      <td>0.0</td>\n",
       "      <td>290.0</td>\n",
       "      <td>447.0</td>\n",
       "      <td>592.00</td>\n",
       "      <td>1673.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>count_mb</td>\n",
       "      <td>3203.0</td>\n",
       "      <td>46.642523</td>\n",
       "      <td>18.696094</td>\n",
       "      <td>1.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>59.00</td>\n",
       "      <td>118.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mb_used_round_sum</td>\n",
       "      <td>3203.0</td>\n",
       "      <td>17286.749610</td>\n",
       "      <td>7523.580332</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12543.0</td>\n",
       "      <td>16985.0</td>\n",
       "      <td>21455.50</td>\n",
       "      <td>49789.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>messages_count</td>\n",
       "      <td>2717.0</td>\n",
       "      <td>45.283769</td>\n",
       "      <td>35.051363</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>63.00</td>\n",
       "      <td>224.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>age</td>\n",
       "      <td>3214.0</td>\n",
       "      <td>46.641568</td>\n",
       "      <td>16.586109</td>\n",
       "      <td>18.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>62.00</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>messages_included</td>\n",
       "      <td>3214.0</td>\n",
       "      <td>341.148102</td>\n",
       "      <td>438.044726</td>\n",
       "      <td>50.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>1000.00</td>\n",
       "      <td>1000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mb_per_month_included</td>\n",
       "      <td>3214.0</td>\n",
       "      <td>20067.405103</td>\n",
       "      <td>7082.491569</td>\n",
       "      <td>15360.0</td>\n",
       "      <td>15360.0</td>\n",
       "      <td>15360.0</td>\n",
       "      <td>30720.00</td>\n",
       "      <td>30720.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>minutes_included</td>\n",
       "      <td>3214.0</td>\n",
       "      <td>1266.179216</td>\n",
       "      <td>1152.749279</td>\n",
       "      <td>500.0</td>\n",
       "      <td>500.0</td>\n",
       "      <td>500.0</td>\n",
       "      <td>3000.00</td>\n",
       "      <td>3000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>rub_monthly_fee</td>\n",
       "      <td>3214.0</td>\n",
       "      <td>979.060361</td>\n",
       "      <td>645.539596</td>\n",
       "      <td>550.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>1950.00</td>\n",
       "      <td>1950.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>rub_per_gb</td>\n",
       "      <td>3214.0</td>\n",
       "      <td>184.676416</td>\n",
       "      <td>23.054986</td>\n",
       "      <td>150.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>200.00</td>\n",
       "      <td>200.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>rub_per_message</td>\n",
       "      <td>3214.0</td>\n",
       "      <td>2.387057</td>\n",
       "      <td>0.922199</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.00</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>rub_per_minute</td>\n",
       "      <td>3214.0</td>\n",
       "      <td>2.387057</td>\n",
       "      <td>0.922199</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.00</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        count          mean          std      min      25%  \\\n",
       "user_id                3214.0   1251.590230   144.659172   1000.0   1125.0   \n",
       "month                  3214.0      8.317362     2.905413      1.0      6.0   \n",
       "calls_count            3174.0     63.833333    32.678036      1.0     41.0   \n",
       "duration_calls_sum     3174.0    456.931632   238.031270      0.0    290.0   \n",
       "count_mb               3203.0     46.642523    18.696094      1.0     35.0   \n",
       "mb_used_round_sum      3203.0  17286.749610  7523.580332      0.0  12543.0   \n",
       "messages_count         2717.0     45.283769    35.051363      1.0     19.0   \n",
       "age                    3214.0     46.641568    16.586109     18.0     32.0   \n",
       "messages_included      3214.0    341.148102   438.044726     50.0     50.0   \n",
       "mb_per_month_included  3214.0  20067.405103  7082.491569  15360.0  15360.0   \n",
       "minutes_included       3214.0   1266.179216  1152.749279    500.0    500.0   \n",
       "rub_monthly_fee        3214.0    979.060361   645.539596    550.0    550.0   \n",
       "rub_per_gb             3214.0    184.676416    23.054986    150.0    150.0   \n",
       "rub_per_message        3214.0      2.387057     0.922199      1.0      1.0   \n",
       "rub_per_minute         3214.0      2.387057     0.922199      1.0      1.0   \n",
       "\n",
       "                           50%       75%      max  \n",
       "user_id                 1253.0   1378.75   1499.0  \n",
       "month                      9.0     11.00     12.0  \n",
       "calls_count               63.0     83.00    244.0  \n",
       "duration_calls_sum       447.0    592.00   1673.0  \n",
       "count_mb                  48.0     59.00    118.0  \n",
       "mb_used_round_sum      16985.0  21455.50  49789.0  \n",
       "messages_count            38.0     63.00    224.0  \n",
       "age                       46.0     62.00     75.0  \n",
       "messages_included         50.0   1000.00   1000.0  \n",
       "mb_per_month_included  15360.0  30720.00  30720.0  \n",
       "minutes_included         500.0   3000.00   3000.0  \n",
       "rub_monthly_fee          550.0   1950.00   1950.0  \n",
       "rub_per_gb               200.0    200.00    200.0  \n",
       "rub_per_message            3.0      3.00      3.0  \n",
       "rub_per_minute             3.0      3.00      3.0  "
      ]
     },
     "execution_count": 347,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe().T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Переведем значения типа object в категориальный тип."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 348,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Создание категориального листа для перевода столбцов из типа данных object в тип данных category для оптимизации работы кода\n",
    "cat_list = ['city', 'first_name', 'last_name', 'reg_date', 'tariff']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 349,
   "metadata": {},
   "outputs": [],
   "source": [
    "df[cat_list] = df[cat_list].astype('category') #Перевод столбцов из типа данных object в  тип category"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Заполним нулями пропущенные значения в данных, предполагая, что если после слияния таблиц выяснилось, что данные о написанных сообщениях, исходящих звонках и использованных мегабайтах  отсутствовали, значит абонент предпочитал звонки остальным видам сервиса, и просто не пользовался включенными функциями."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 350,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Создание листа с наименованием столбцов, в которых необходимо заполнить пустые значения нулями\n",
    "fill_na_list = ['calls_count', 'duration_calls_sum', 'count_mb', 'mb_used_round_sum', 'messages_count']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 351,
   "metadata": {},
   "outputs": [],
   "source": [
    "df[fill_na_list] = df[fill_na_list].fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 352,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Перевод данных в тип int\n",
    "float_list = ['calls_count', 'duration_calls_sum', 'count_mb', 'mb_used_round_sum', 'messages_count']\n",
    "df[float_list] = df[float_list].astype('int')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 353,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 3214 entries, 0 to 3213\n",
      "Data columns (total 21 columns):\n",
      "user_id                  3214 non-null int64\n",
      "month                    3214 non-null int64\n",
      "calls_count              3214 non-null int64\n",
      "duration_calls_sum       3214 non-null int64\n",
      "count_mb                 3214 non-null int64\n",
      "mb_used_round_sum        3214 non-null int64\n",
      "messages_count           3214 non-null int64\n",
      "age                      3214 non-null int8\n",
      "churn_date               187 non-null object\n",
      "city                     3214 non-null category\n",
      "first_name               3214 non-null category\n",
      "last_name                3214 non-null category\n",
      "reg_date                 3214 non-null category\n",
      "tariff                   3214 non-null category\n",
      "messages_included        3214 non-null int64\n",
      "mb_per_month_included    3214 non-null int64\n",
      "minutes_included         3214 non-null int64\n",
      "rub_monthly_fee          3214 non-null int64\n",
      "rub_per_gb               3214 non-null int64\n",
      "rub_per_message          3214 non-null int64\n",
      "rub_per_minute           3214 non-null int64\n",
      "dtypes: category(5), int64(14), int8(1), object(1)\n",
      "memory usage: 652.8 KB\n"
     ]
    }
   ],
   "source": [
    "#Cколько таблица использует memory usage после обработки\n",
    "df.info(memory_usage='deep')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Напишем функцию, которая будет подсчитывать помесячную выручку с каждого пользователя при превышении, включенных в тарифный план минут, смс и количества Гб."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 354,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Функция, для подсчета использованных сверх лимита смс, минут и Гб в денежном эквиваленте\n",
    "def income(row):\n",
    "    minutes = (row['duration_calls_sum'] - row['minutes_included']) * row['rub_per_minute']\n",
    "    sms = (row['messages_count'] - row['messages_included']) * row['rub_per_message']\n",
    "    gb = np.ceil(((row['mb_used_round_sum'] - row['mb_per_month_included']) / 1024))* row['rub_per_gb']\n",
    "    \n",
    "    over_limit = 0\n",
    "    for i in [minutes, sms, gb]:\n",
    "        if i>0:\n",
    "            over_limit += i\n",
    "    return over_limit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 355,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['over_limit'] = df.apply(income, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 356,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>month</th>\n",
       "      <th>calls_count</th>\n",
       "      <th>duration_calls_sum</th>\n",
       "      <th>count_mb</th>\n",
       "      <th>mb_used_round_sum</th>\n",
       "      <th>messages_count</th>\n",
       "      <th>age</th>\n",
       "      <th>churn_date</th>\n",
       "      <th>city</th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "      <th>reg_date</th>\n",
       "      <th>tariff</th>\n",
       "      <th>messages_included</th>\n",
       "      <th>mb_per_month_included</th>\n",
       "      <th>minutes_included</th>\n",
       "      <th>rub_monthly_fee</th>\n",
       "      <th>rub_per_gb</th>\n",
       "      <th>rub_per_message</th>\n",
       "      <th>rub_per_minute</th>\n",
       "      <th>over_limit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2880</td>\n",
       "      <td>1454</td>\n",
       "      <td>8</td>\n",
       "      <td>59</td>\n",
       "      <td>450</td>\n",
       "      <td>29</td>\n",
       "      <td>6046</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Томск</td>\n",
       "      <td>Адам</td>\n",
       "      <td>Алешин</td>\n",
       "      <td>2018-03-08</td>\n",
       "      <td>smart</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>550</td>\n",
       "      <td>200</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3166</td>\n",
       "      <td>1498</td>\n",
       "      <td>7</td>\n",
       "      <td>23</td>\n",
       "      <td>175</td>\n",
       "      <td>19</td>\n",
       "      <td>7486</td>\n",
       "      <td>20</td>\n",
       "      <td>68</td>\n",
       "      <td>2018-10-25</td>\n",
       "      <td>Владикавказ</td>\n",
       "      <td>Всеволод</td>\n",
       "      <td>Акимчин</td>\n",
       "      <td>2018-07-19</td>\n",
       "      <td>smart</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>550</td>\n",
       "      <td>200</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>237</td>\n",
       "      <td>1037</td>\n",
       "      <td>10</td>\n",
       "      <td>40</td>\n",
       "      <td>304</td>\n",
       "      <td>26</td>\n",
       "      <td>10422</td>\n",
       "      <td>16</td>\n",
       "      <td>73</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Череповец</td>\n",
       "      <td>Изольда</td>\n",
       "      <td>Архипова</td>\n",
       "      <td>2018-10-13</td>\n",
       "      <td>smart</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>550</td>\n",
       "      <td>200</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1527</td>\n",
       "      <td>1244</td>\n",
       "      <td>11</td>\n",
       "      <td>81</td>\n",
       "      <td>589</td>\n",
       "      <td>62</td>\n",
       "      <td>18680</td>\n",
       "      <td>83</td>\n",
       "      <td>68</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Москва</td>\n",
       "      <td>Геральд</td>\n",
       "      <td>Макеев</td>\n",
       "      <td>2018-05-09</td>\n",
       "      <td>smart</td>\n",
       "      <td>50</td>\n",
       "      <td>15360</td>\n",
       "      <td>500</td>\n",
       "      <td>550</td>\n",
       "      <td>200</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1166.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>935</td>\n",
       "      <td>1150</td>\n",
       "      <td>10</td>\n",
       "      <td>55</td>\n",
       "      <td>368</td>\n",
       "      <td>54</td>\n",
       "      <td>26380</td>\n",
       "      <td>133</td>\n",
       "      <td>58</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Сургут</td>\n",
       "      <td>Майя</td>\n",
       "      <td>Муравьева</td>\n",
       "      <td>2018-08-05</td>\n",
       "      <td>ultra</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>1950</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      user_id  month  calls_count  duration_calls_sum  count_mb  \\\n",
       "2880     1454      8           59                 450        29   \n",
       "3166     1498      7           23                 175        19   \n",
       "237      1037     10           40                 304        26   \n",
       "1527     1244     11           81                 589        62   \n",
       "935      1150     10           55                 368        54   \n",
       "\n",
       "      mb_used_round_sum  messages_count  age  churn_date         city  \\\n",
       "2880               6046              23   29         NaN        Томск   \n",
       "3166               7486              20   68  2018-10-25  Владикавказ   \n",
       "237               10422              16   73         NaN    Череповец   \n",
       "1527              18680              83   68         NaN       Москва   \n",
       "935               26380             133   58         NaN       Сургут   \n",
       "\n",
       "     first_name  last_name    reg_date tariff  messages_included  \\\n",
       "2880       Адам     Алешин  2018-03-08  smart                 50   \n",
       "3166   Всеволод    Акимчин  2018-07-19  smart                 50   \n",
       "237     Изольда   Архипова  2018-10-13  smart                 50   \n",
       "1527    Геральд     Макеев  2018-05-09  smart                 50   \n",
       "935        Майя  Муравьева  2018-08-05  ultra               1000   \n",
       "\n",
       "      mb_per_month_included  minutes_included  rub_monthly_fee  rub_per_gb  \\\n",
       "2880                  15360               500              550         200   \n",
       "3166                  15360               500              550         200   \n",
       "237                   15360               500              550         200   \n",
       "1527                  15360               500              550         200   \n",
       "935                   30720              3000             1950         150   \n",
       "\n",
       "      rub_per_message  rub_per_minute  over_limit  \n",
       "2880                3               3         0.0  \n",
       "3166                3               3         0.0  \n",
       "237                 3               3         0.0  \n",
       "1527                3               3      1166.0  \n",
       "935                 1               1         0.0  "
      ]
     },
     "execution_count": 356,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Добавим в таблицу столбец с помесячной выручкой от каждого абонента с включением абонентской платы."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 357,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['income_sum'] = df['over_limit'] + df['rub_monthly_fee']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 358,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>month</th>\n",
       "      <th>calls_count</th>\n",
       "      <th>duration_calls_sum</th>\n",
       "      <th>count_mb</th>\n",
       "      <th>mb_used_round_sum</th>\n",
       "      <th>messages_count</th>\n",
       "      <th>age</th>\n",
       "      <th>churn_date</th>\n",
       "      <th>city</th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "      <th>reg_date</th>\n",
       "      <th>tariff</th>\n",
       "      <th>messages_included</th>\n",
       "      <th>mb_per_month_included</th>\n",
       "      <th>minutes_included</th>\n",
       "      <th>rub_monthly_fee</th>\n",
       "      <th>rub_per_gb</th>\n",
       "      <th>rub_per_message</th>\n",
       "      <th>rub_per_minute</th>\n",
       "      <th>over_limit</th>\n",
       "      <th>income_sum</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1000</td>\n",
       "      <td>5</td>\n",
       "      <td>22</td>\n",
       "      <td>159</td>\n",
       "      <td>5</td>\n",
       "      <td>2256</td>\n",
       "      <td>22</td>\n",
       "      <td>52</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Краснодар</td>\n",
       "      <td>Рафаил</td>\n",
       "      <td>Верещагин</td>\n",
       "      <td>2018-05-25</td>\n",
       "      <td>ultra</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>1950</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1950.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1000</td>\n",
       "      <td>6</td>\n",
       "      <td>43</td>\n",
       "      <td>172</td>\n",
       "      <td>49</td>\n",
       "      <td>23257</td>\n",
       "      <td>60</td>\n",
       "      <td>52</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Краснодар</td>\n",
       "      <td>Рафаил</td>\n",
       "      <td>Верещагин</td>\n",
       "      <td>2018-05-25</td>\n",
       "      <td>ultra</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>1950</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1950.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>1000</td>\n",
       "      <td>7</td>\n",
       "      <td>47</td>\n",
       "      <td>340</td>\n",
       "      <td>29</td>\n",
       "      <td>14016</td>\n",
       "      <td>75</td>\n",
       "      <td>52</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Краснодар</td>\n",
       "      <td>Рафаил</td>\n",
       "      <td>Верещагин</td>\n",
       "      <td>2018-05-25</td>\n",
       "      <td>ultra</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>1950</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1950.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>1000</td>\n",
       "      <td>8</td>\n",
       "      <td>52</td>\n",
       "      <td>408</td>\n",
       "      <td>29</td>\n",
       "      <td>14070</td>\n",
       "      <td>81</td>\n",
       "      <td>52</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Краснодар</td>\n",
       "      <td>Рафаил</td>\n",
       "      <td>Верещагин</td>\n",
       "      <td>2018-05-25</td>\n",
       "      <td>ultra</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>1950</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1950.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>1000</td>\n",
       "      <td>9</td>\n",
       "      <td>58</td>\n",
       "      <td>466</td>\n",
       "      <td>27</td>\n",
       "      <td>14581</td>\n",
       "      <td>57</td>\n",
       "      <td>52</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Краснодар</td>\n",
       "      <td>Рафаил</td>\n",
       "      <td>Верещагин</td>\n",
       "      <td>2018-05-25</td>\n",
       "      <td>ultra</td>\n",
       "      <td>1000</td>\n",
       "      <td>30720</td>\n",
       "      <td>3000</td>\n",
       "      <td>1950</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1950.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   user_id  month  calls_count  duration_calls_sum  count_mb  \\\n",
       "0     1000      5           22                 159         5   \n",
       "1     1000      6           43                 172        49   \n",
       "2     1000      7           47                 340        29   \n",
       "3     1000      8           52                 408        29   \n",
       "4     1000      9           58                 466        27   \n",
       "\n",
       "   mb_used_round_sum  messages_count  age churn_date       city first_name  \\\n",
       "0               2256              22   52        NaN  Краснодар     Рафаил   \n",
       "1              23257              60   52        NaN  Краснодар     Рафаил   \n",
       "2              14016              75   52        NaN  Краснодар     Рафаил   \n",
       "3              14070              81   52        NaN  Краснодар     Рафаил   \n",
       "4              14581              57   52        NaN  Краснодар     Рафаил   \n",
       "\n",
       "   last_name    reg_date tariff  messages_included  mb_per_month_included  \\\n",
       "0  Верещагин  2018-05-25  ultra               1000                  30720   \n",
       "1  Верещагин  2018-05-25  ultra               1000                  30720   \n",
       "2  Верещагин  2018-05-25  ultra               1000                  30720   \n",
       "3  Верещагин  2018-05-25  ultra               1000                  30720   \n",
       "4  Верещагин  2018-05-25  ultra               1000                  30720   \n",
       "\n",
       "   minutes_included  rub_monthly_fee  rub_per_gb  rub_per_message  \\\n",
       "0              3000             1950         150                1   \n",
       "1              3000             1950         150                1   \n",
       "2              3000             1950         150                1   \n",
       "3              3000             1950         150                1   \n",
       "4              3000             1950         150                1   \n",
       "\n",
       "   rub_per_minute  over_limit  income_sum  \n",
       "0               1         0.0      1950.0  \n",
       "1               1         0.0      1950.0  \n",
       "2               1         0.0      1950.0  \n",
       "3               1         0.0      1950.0  \n",
       "4               1         0.0      1950.0  "
      ]
     },
     "execution_count": 358,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Построим график линейной зависимости помесячной выручки в зависимости от тарифа."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 359,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_data = df.groupby(['tariff', 'month'])['income_sum'].sum().reset_index()\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.suptitle('Грифик линейной зависимости помесячной выручки в зависимости от тарифа', size=18)\n",
    "sns.lineplot(data = plot_data, x='month', y='income_sum', hue='tariff', palette='deep', legend='brief')\n",
    "plt.xlabel('Номер месяца', size=12)\n",
    "plt.ylabel('Суммарная выручка по тарифу', size=12)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "По графику видим, что суммарная выручка по каждому тарифу линейно растет. По тарифу \"Смарт\" она возрастает более резко, а значит для бизнеса в 2018 году тариф был более выгоден главным образом за счет использования Гб и минут сверх лимита."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Шаг 3. Проанализируйте данные <a class=\"anchor\" id=\"step3\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Сколько минут разговора, сколько сообщений и какой объём интернет-трафика требуется пользователям каждого тарифа в месяц**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Для начала построим сводную таблицу со средними и медианными значениями всех показателей, а именно: сумма продолжительности звонков, количество сообщений и количество мегабайт в месяц. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 360,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"6\" halign=\"left\">median</th>\n",
       "      <th colspan=\"6\" halign=\"left\">mean</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">duration_calls_sum</th>\n",
       "      <th colspan=\"2\" halign=\"left\">mb_used_round_sum</th>\n",
       "      <th colspan=\"2\" halign=\"left\">messages_count</th>\n",
       "      <th colspan=\"2\" halign=\"left\">duration_calls_sum</th>\n",
       "      <th colspan=\"2\" halign=\"left\">mb_used_round_sum</th>\n",
       "      <th colspan=\"2\" halign=\"left\">messages_count</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tariff</th>\n",
       "      <th>smart</th>\n",
       "      <th>ultra</th>\n",
       "      <th>smart</th>\n",
       "      <th>ultra</th>\n",
       "      <th>smart</th>\n",
       "      <th>ultra</th>\n",
       "      <th>smart</th>\n",
       "      <th>ultra</th>\n",
       "      <th>smart</th>\n",
       "      <th>ultra</th>\n",
       "      <th>smart</th>\n",
       "      <th>ultra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>month</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>162.5</td>\n",
       "      <td>382.0</td>\n",
       "      <td>7107.0</td>\n",
       "      <td>14808.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>203.852941</td>\n",
       "      <td>428.111111</td>\n",
       "      <td>8524.441176</td>\n",
       "      <td>13153.555556</td>\n",
       "      <td>18.235294</td>\n",
       "      <td>33.777778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>258.0</td>\n",
       "      <td>168.0</td>\n",
       "      <td>12572.5</td>\n",
       "      <td>7335.5</td>\n",
       "      <td>20.0</td>\n",
       "      <td>5.5</td>\n",
       "      <td>298.689655</td>\n",
       "      <td>297.125000</td>\n",
       "      <td>11611.396552</td>\n",
       "      <td>11786.958333</td>\n",
       "      <td>24.086207</td>\n",
       "      <td>21.958333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>409.0</td>\n",
       "      <td>403.0</td>\n",
       "      <td>15690.0</td>\n",
       "      <td>17513.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>390.051948</td>\n",
       "      <td>489.648649</td>\n",
       "      <td>15123.857143</td>\n",
       "      <td>17551.972973</td>\n",
       "      <td>31.857143</td>\n",
       "      <td>32.297297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>368.5</td>\n",
       "      <td>453.0</td>\n",
       "      <td>14104.5</td>\n",
       "      <td>16662.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>367.133929</td>\n",
       "      <td>458.018182</td>\n",
       "      <td>13479.482143</td>\n",
       "      <td>16843.800000</td>\n",
       "      <td>30.741071</td>\n",
       "      <td>31.563636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>433.0</td>\n",
       "      <td>519.0</td>\n",
       "      <td>16343.0</td>\n",
       "      <td>18717.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>387.361702</td>\n",
       "      <td>510.328358</td>\n",
       "      <td>15825.198582</td>\n",
       "      <td>19381.194030</td>\n",
       "      <td>33.773050</td>\n",
       "      <td>37.850746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>400.0</td>\n",
       "      <td>479.0</td>\n",
       "      <td>16095.5</td>\n",
       "      <td>19495.5</td>\n",
       "      <td>28.0</td>\n",
       "      <td>27.5</td>\n",
       "      <td>395.640244</td>\n",
       "      <td>479.702381</td>\n",
       "      <td>15814.768293</td>\n",
       "      <td>18942.238095</td>\n",
       "      <td>33.402439</td>\n",
       "      <td>41.726190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>414.0</td>\n",
       "      <td>542.0</td>\n",
       "      <td>15948.0</td>\n",
       "      <td>20034.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>408.353234</td>\n",
       "      <td>545.791209</td>\n",
       "      <td>15763.512438</td>\n",
       "      <td>20514.648352</td>\n",
       "      <td>33.751244</td>\n",
       "      <td>49.846154</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>432.0</td>\n",
       "      <td>500.0</td>\n",
       "      <td>16855.0</td>\n",
       "      <td>18945.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>421.468085</td>\n",
       "      <td>510.775701</td>\n",
       "      <td>16632.174468</td>\n",
       "      <td>19594.065421</td>\n",
       "      <td>33.638298</td>\n",
       "      <td>48.439252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>435.0</td>\n",
       "      <td>520.0</td>\n",
       "      <td>16050.0</td>\n",
       "      <td>19675.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>43.0</td>\n",
       "      <td>428.611538</td>\n",
       "      <td>539.443478</td>\n",
       "      <td>16324.526923</td>\n",
       "      <td>19222.208696</td>\n",
       "      <td>33.638462</td>\n",
       "      <td>52.286957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>427.5</td>\n",
       "      <td>533.0</td>\n",
       "      <td>17248.5</td>\n",
       "      <td>20359.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>49.0</td>\n",
       "      <td>426.136054</td>\n",
       "      <td>558.081301</td>\n",
       "      <td>16778.564626</td>\n",
       "      <td>20063.869919</td>\n",
       "      <td>33.765306</td>\n",
       "      <td>58.430894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>428.5</td>\n",
       "      <td>546.0</td>\n",
       "      <td>17036.5</td>\n",
       "      <td>18398.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>43.0</td>\n",
       "      <td>435.265823</td>\n",
       "      <td>541.380597</td>\n",
       "      <td>16917.531646</td>\n",
       "      <td>19805.313433</td>\n",
       "      <td>34.075949</td>\n",
       "      <td>55.791045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>471.0</td>\n",
       "      <td>584.0</td>\n",
       "      <td>17741.0</td>\n",
       "      <td>21994.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>478.560831</td>\n",
       "      <td>592.805755</td>\n",
       "      <td>18136.833828</td>\n",
       "      <td>21813.589928</td>\n",
       "      <td>35.994065</td>\n",
       "      <td>60.611511</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   median                                                   \\\n",
       "       duration_calls_sum        mb_used_round_sum          messages_count   \n",
       "tariff              smart  ultra             smart    ultra          smart   \n",
       "month                                                                        \n",
       "1                   162.5  382.0            7107.0  14808.0           15.0   \n",
       "2                   258.0  168.0           12572.5   7335.5           20.0   \n",
       "3                   409.0  403.0           15690.0  17513.0           23.0   \n",
       "4                   368.5  453.0           14104.5  16662.0           28.0   \n",
       "5                   433.0  519.0           16343.0  18717.0           30.0   \n",
       "6                   400.0  479.0           16095.5  19495.5           28.0   \n",
       "7                   414.0  542.0           15948.0  20034.0           29.0   \n",
       "8                   432.0  500.0           16855.0  18945.0           27.0   \n",
       "9                   435.0  520.0           16050.0  19675.0           30.0   \n",
       "10                  427.5  533.0           17248.5  20359.0           30.0   \n",
       "11                  428.5  546.0           17036.5  18398.0           28.0   \n",
       "12                  471.0  584.0           17741.0  21994.0           29.0   \n",
       "\n",
       "                           mean                                              \\\n",
       "             duration_calls_sum             mb_used_round_sum                 \n",
       "tariff ultra              smart       ultra             smart         ultra   \n",
       "month                                                                         \n",
       "1       32.0         203.852941  428.111111       8524.441176  13153.555556   \n",
       "2        5.5         298.689655  297.125000      11611.396552  11786.958333   \n",
       "3       20.0         390.051948  489.648649      15123.857143  17551.972973   \n",
       "4       17.0         367.133929  458.018182      13479.482143  16843.800000   \n",
       "5       25.0         387.361702  510.328358      15825.198582  19381.194030   \n",
       "6       27.5         395.640244  479.702381      15814.768293  18942.238095   \n",
       "7       38.0         408.353234  545.791209      15763.512438  20514.648352   \n",
       "8       40.0         421.468085  510.775701      16632.174468  19594.065421   \n",
       "9       43.0         428.611538  539.443478      16324.526923  19222.208696   \n",
       "10      49.0         426.136054  558.081301      16778.564626  20063.869919   \n",
       "11      43.0         435.265823  541.380597      16917.531646  19805.313433   \n",
       "12      51.0         478.560831  592.805755      18136.833828  21813.589928   \n",
       "\n",
       "                                  \n",
       "       messages_count             \n",
       "tariff          smart      ultra  \n",
       "month                             \n",
       "1           18.235294  33.777778  \n",
       "2           24.086207  21.958333  \n",
       "3           31.857143  32.297297  \n",
       "4           30.741071  31.563636  \n",
       "5           33.773050  37.850746  \n",
       "6           33.402439  41.726190  \n",
       "7           33.751244  49.846154  \n",
       "8           33.638298  48.439252  \n",
       "9           33.638462  52.286957  \n",
       "10          33.765306  58.430894  \n",
       "11          34.075949  55.791045  \n",
       "12          35.994065  60.611511  "
      ]
     },
     "execution_count": 360,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tariff_pivot = df.pivot_table(index='month', columns='tariff', \n",
    "                              values=['duration_calls_sum', 'messages_count', 'mb_used_round_sum'],\n",
    "                             aggfunc=['median', 'mean'])\n",
    "tariff_pivot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Из сводной таблицы видим: \n",
    "- клиенты тарифа \"Смарт\" и \"Ультра\" в среднем не выговаривают все количество минут, которое предоставляет им оператор за месяц. И в принципе средние и медианные значения израсходованных минут не сильно отличаются у двух тарифов. \n",
    "- Почти во все месяцы на тарифе Смарт клиенты выходили за пределы предоставляемого трафика интернета - 15360 МБ в месяц. Для бизнеса это выгодно, компания может получать прибыль с дополнительного предоставления интернета. Но, с другой стороны, в долгосрочной перспективе это может привести к тому, что клиенты начнут переходить на другие операторы связи с более выгодными условиями.\n",
    "- С сообщениями ситуация такая же как и с минутами, на всех тарифах в среднем люди не выходят за пределы предоставляемого лимита."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Построим 'Гистограммы распределения израсходованного трафика по звонкам и интернету тарифа \"Смарт\"' для того чтобы проверить предположение, что люди предпочитают использовать интернет и таким образом созваниваться друг с другом (через сервисы Whatsapp или Telegram, например) чем использовать мобильную связь."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 361,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x504 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(1, 2, figsize=(18,7))\n",
    "plt.suptitle('Гистограммы распределения израсходованного трафика по звонкам и интернету тарифа \"Смарт\"', size=18)\n",
    "\n",
    "#Построение гистограммы израсходованных минут тарифа Смарт\n",
    "df[df['tariff'] == 'smart']['duration_calls_sum'].hist(bins=50, ax=axs[0], edgecolor='black')\n",
    "axs[0].set_title('Гистограмма распределения израсходованных минут тарифа Смарт', size=14)\n",
    "axs[0].set_xlabel('Сумма израсходованных минут', size=13)\n",
    "axs[0].set_ylabel('Количество абонентов', size=13)\n",
    "\n",
    "#Построение гистограммы использованных гигабайт тарифа Смарт\n",
    "df[df['tariff'] == 'smart']['mb_used_round_sum'].hist(bins=50, ax=axs[1], edgecolor='black')\n",
    "axs[1].set_title('Гистограмма распределения израсходованных Мб тарифа Смарт', size=14)\n",
    "axs[1].set_xlabel('Количество использованных Мб', size=13)\n",
    "axs[1].set_ylabel('Количество пользователей', size=13)\n",
    "\n",
    "\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "По первой гистограмме видно, что наибольшая группа абонентов тарифа Смарт используют в месяц 350 - 360 минут или 400-530 минут, что укладывается в лимит предоставляемого трафика (500 звонков в месяц). По мере расходования все большего количества минут после 500 лимитированных,количество абонентов, согласных доплачивать за дополнительные минуты снижается, что логично. И тем не менее, у гистограммы мы видим \"хвост\", находятся люди в нашей выборке, которые много разговаривают по мобильной связи, и котором сильно не хватает лимита в 500 минут, и которым было бы выгоднее перейти на тариф Ультра с предоставляемым лимитом в 3000 минут. Распределение схоже с Пуассоновским и смещено влево, обрезано на нуле."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Гистограмма распределения потраченных Мб на тарифе Смарт напоминает колокол, скорее симметрична и стремится к нормальному распределению. Мы видим, что наибольшее число пользователей используют примерно 15 100 Мб, что составляет практически весь лимит трафика. Достаточно большое количество людей (около 120) используют трафик в размере 20000 Мб, видимо покупая недостающие Мб (или почти 5 Гб). После этого значения наблюдается резкое снижение частоты от центра к границам допуска. Соответственно, все меньше и меньше людей покупают дополнитеные Гб интернета, хотя находятся в нашей выборке и такие, которые используют в месяц 38 000 Мб, что примерно равно 38 Гб, соответственно, в их тариф включено 15 Гб, а они дополнительно покупают еще 23 Гб. Им было бы более выгодно выбрать вместо этого тариф \"Ультра\". "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Построим 'Гистограммы распределения израсходованного трафика по звонкам и интернету тарифа \"Ультра\" для того чтобы проверить предположение, что люди предпочитают использовать интернет и таким образом созваниваться друг с другом (через сервисы Whatsapp или Telegram, например) чем использовать мобильную связь.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 362,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x504 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(1, 2, figsize=(18,7))\n",
    "plt.suptitle('Гистограммы распределения израсходованного трафика по звонкам и интернету тарифа \"Ультра\"', size=18)\n",
    "\n",
    "#Построение  гистограммы израсходованных минут тарифа Ультра\n",
    "df[df['tariff'] == 'ultra']['duration_calls_sum'].hist(bins=50, ax=axs[0], edgecolor='black')\n",
    "axs[0].set_title('Гистограмма распределения израсходованных минут тарифа Ультра', size=14)\n",
    "axs[0].set_xlabel('Сумма израсходованных минут', size=13)\n",
    "axs[0].set_ylabel('Количество абонентов', size=13)\n",
    "\n",
    "#Построение гистограммы использованных мегабайт тарифа Ультра\n",
    "df[df['tariff'] == 'ultra']['mb_used_round_sum'].hist(bins=50, ax=axs[1], edgecolor='black')\n",
    "axs[1].set_title('Гистограмма распределения израсходованных Мб тарифа Ультра', size=14)\n",
    "axs[1].set_xlabel('Количество использованных Мб', size=13)\n",
    "axs[1].set_ylabel('Количество пользователей', size=13)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Первая гистограмма - распределения израсходованных минут тарифа ультра несимметрична и неравномерна. Самый большой пик наблюдается в диапазоне 0-33 минут. Можно предположить, что абоненты, входящие в эту группу, не склонны использовать мобильную связь, а используют вместо нее интернет для звонков. А возможно они изначально выбрали такой тариф ради большого трафика на интернет. Наибольшая группа людей, пользующаяся тарифом \"Ультра\" использует минуты в диапазоне 250 - 750 минут. Никто из абонентов не расходует полное количество минут, входящих в трафик."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Проанализируем гистограмму распределения израсходованных Мб тарифа Ультра. Гистограмма крайне не равномерна, наблюдаются пики и падения по всей диаграмме с некоторой периодичностью.Выборка пользователей не равномерная, встречаются как люди, которые используют высокое количество Мб (например около 48 человек используют 22 000 мб), так и те, которые пользуются интернетом крайне мало (до 500 Гб). В \"хвосте\" находятся пользователи, которые доплачивают за дополнительные Гб интернета. Даже есть те, которые доплачивают почти за 20 Гб интернета."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Построим гистограммы распределения количества сообщений на тарифе Смарт и Ультра."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 363,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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nSw/P19fffWVXnzxRdntdjkcDpWWlnrHy8vLZbfbFRsbW+cYAAAIPRUVFbrrrrvUrVs3derUSf369dOCBQt07tw5s6MBAACLMbQy5PTp02rTpo2k80tUq6qqdNNNN+mLL74wfKLnn39excXFeu211xQRESFJ6tixo86cOaPt27fL6XRq5cqV6tu3b71jAAAg9GzatElut1tVVVU6evSo9u7dq7feektnzpxRTk6O2fEAAICFGCpDWrdurS+//FIpKSm68cYb9etf/1rNmjVTTIyxe5z37t2rV199VcnJyRo0aJD3by5cuFAFBQXKzc2t8fhcSbLb7bWOAQCA0PPtR+s6nU6lp6fr4YcfpgwBAAANYqgMyc7OVmlpqVJSUjR69GiNGTNGZ8+eVW5urqGTtGvXTn//+98vO5aWlqaioqIGjwEAANx4441av3692TEAAIDFGCpD/vu//9v7unv37vrkk0909uxZRUdH+y0YAADAt33++ef69a9/rQMHDqhVq1b64Q9/qM6dO5sdCwAAWMwVbcMeHh5OEQIAAALq97//vYYMGaKTJ08qNTVVJ0+e1EMPPRSQp9MBAIDgYmhlCAAAgNkWLFigl19+WT179vQe27p1q5577jn17t3bxGQAAMBqrmhlCAAAQKCVlJSoR48eNY716NFDpaWlJiUCAABWRRkCAAAsITExUR999FGNY9u2bZPD4TApEQAAsKoG3SZz5MgRuVwuORwONW/e3F+ZAAAALjF69GiNHj1affr0UevWrVVSUqKNGzdqzpw5ZkcDAAAWY6gMOX78uCZOnKitW7dKkmw2m3r27Kk5c+YoNjbWrwEBAAAkqU+fPkpISFBhYaGKi4vlcDi0ZMkSpaWlmR0NAABYjKEyJC8vT5K0fv16fec739HXX3+t/Px8zZkzh6sxAAAgYNLS0ig/AADAVTNUhnzwwQdav369YmJiJElt27ZVfn6++vfv79dwAAAAFxQWFtY6dv/99wcwCQAAsDrDe4bYbLYaP9vtdnk8Hp8HAgAAuJzJkyerTZs2lxy32WyUIQAAoEEMlSF33HGHJkyYoClTpigpKUklJSWaM2eOunfv7u98AAAAkqSoqCht3LjR7BgAACAIGHq07pQpU1RVVaXevXurQ4cOyszMVGVlpSZPnuzvfAAAAJIuXaUKAABwpQytDImNjdUbb7yhgwcP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uXON419++aWeeuopud1uv4YDAAC4ICoqSps3bzY7BgAACAJ1Plp31KhRGjFihHbv3u099stf/lIPPPCA0tPT9atf/crvAQEAACRxiy4AAPCZOleGPPLII6qqqtKwYcP0wgsv6J133tHu3bu1YMECde/ePVAZAQAAVFlZqUceeUTh4eGKjY3VjTfeqD59+uiGG24wOxoAALCYOleGSOdXh2RlZWn48OGqrKzU6tWrKUIAAEDAjRo1SrfddptuuukmhYWFadOmTbr33nv1hz/8wexoAADAYgw9TWbcuHE6e/asVq9erX//+9+6/vrr/Z0LAACghss9Wve9997T/Pnzdffddwc+EAAAsKw6y5DFixd7Xzdt2lQ2m00PP/ywBg0a5D0+cuRI/6UDAACow3333afTp0+bHQMAAFhMnWXIhx9+WOPnC/fkXjhus9koQwAAQMB4PB59/vnncrlccjgc6ty5swYPHmx2LAAAYDF1liFLly4NVA4AAIA6uVwujRw5Ul9++aXi4+NVVlamlJQUvfLKK0pMTDQ7HgAAsJB6N1AFAABoDGbNmqVOnTrpk08+0datW/Xxxx/rtttu08yZM82OBgAALMbQBqoAAABm++yzz7RlyxZFRUVJkq699lpNnjxZGRkZJicDAABWw8oQAABgCZGRkTpx4kSNYydOnFB4eLhJiQAAgFVRhgAAAEu45557NGbMGG3btk379+/Xtm3b9MQTTygzM9PsaAAAwGK4TQYAAFhCTk6OZs+erezsbFVVVSkiIkL333+/nnrqKbOjAQAAi6EMAQAAlhAVFaXp06fr5z//ucrLyxUXFyebzWZ2LAAAYEHcJgMAABq1zz77rMbPNptN8fHxstlsOnfunPLz801KBgAArCogZUh+fr4yMjJ088036x//+If3+L59+/SjH/1Iffr00Y9+9CP961//MjQGAABCR3Z2tj7//PNLjn/55Zd64IEH9OGHH5qQCgAAWFlAypBevXpp+fLlSkpKqnE8NzdXWVlZ2rBhg7KysjRt2jRDYwAAIHSMGjVKI0aM0O7du73HfvnLX+qBBx5Qenq6fvWrX5mYDgAAWFFAyhCn0ymHw1HjWFlZmXbv3q0BAwZIkgYMGKDdu3ervLy8zjEAABBaHnnkEQ0bNkzDhg3TRx99pJEjR2rx4sVasGCBJk+erIiICLMjAgAAizFt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\n",
      "text/plain": [
       "<Figure size 1296x504 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(1, 2, figsize=(18,7))\n",
    "plt.suptitle('Гистограммы распределения израсходованного лимита сообщений на тарифе \"Смарт\" и \"Ультра\"', size=18)\n",
    "\n",
    "#Построение гистограммы израсходованных минут тарифа Смарт\n",
    "df[df['tariff'] == 'smart']['messages_count'].hist(bins=50, ax=axs[0], edgecolor='black')\n",
    "axs[0].set_title('Гистограмма распределения количества сообщений тарифа Смарт', size=14)\n",
    "axs[0].set_xlabel('Количество отправленных сообщений', size=13)\n",
    "axs[0].set_ylabel('Количество абонентов', size=13)\n",
    "\n",
    "#Построение гистограммы использованных гигабайт тарифа Смарт\n",
    "df[df['tariff'] == 'ultra']['messages_count'].hist(bins=50, ax=axs[1], edgecolor='black')\n",
    "axs[1].set_title('Гистограмма распределения количества сообщений тарифа Ультра', size=14)\n",
    "axs[1].set_xlabel('Количество отправленных сообщений', size=13)\n",
    "axs[1].set_ylabel('Количество пользователей', size=13)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "По полученным гистограммам видим, что в целом распределение на обоих графиках схоже, а значит и поведение почти всех клиентов, относящихся к разным тарифам, тоже схоже. Например, в обоих случаях мы наблюдаем пик в диапазоне 0-3 сообщений в месяц у клиентов тарифа Смарт (примерно у 350 чел.) и пик в диапазоне 0-5 сообщений в месяц у пользователей тарифа Ультра (около 210 чел.)\n",
    "У пользователей тарифа Смарт мы видим тенденцию расходования лимита сообщений и плату за дальнейшие сообщения.\n",
    "Абоненты тарифа Ультра наоборот никогда не выходят за лимит предоставляемого количества сообщений."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Среднее количество, дисперсия и стандартное отклонение.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Мы разделили генеральную совокупность на 2 выборки: тариф Смарт и тариф Ультра. По этим выборкам посчитали среднее, дисперсию и стандартное отклонение по количеству минут, использованных мегабайт и количеству сообщений."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Количество минут**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "___Тариф Смарт___"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 364,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Среднее по количеству минут в тарифе Смарт: 417.93\n",
      "Дисперсия по количеству минут в тарифе Смарт: 36203.07\n",
      "Стандартное отклонение по количеству минут в тарифе Смарт: 190.31\n"
     ]
    }
   ],
   "source": [
    "print('Среднее по количеству минут в тарифе Смарт: {:.2f}'.format(df[df['tariff'] == 'smart']\n",
    "                                                                  ['duration_calls_sum'].mean()))\n",
    "print('Дисперсия по количеству минут в тарифе Смарт: {:.2f}'.format(np.var(df[df['tariff'] == 'smart']\n",
    "                                                                           ['duration_calls_sum'])))\n",
    "print('Стандартное отклонение по количеству минут в тарифе Смарт: {:.2f}'.format(np.std(df[df['tariff'] == 'smart']\n",
    "                                                                                        ['duration_calls_sum'], ddof=1)))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "___Тариф Ультра___"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 365,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Среднее по количеству минут в тарифе Ультра: 526.62\n",
      "Дисперсия по количеству минут в тарифе Ультра: 100771.22\n",
      "Стандартное отклонение по количеству минут в тарифе Ультра: 317.61\n"
     ]
    }
   ],
   "source": [
    "print('Среднее по количеству минут в тарифе Ультра: {:.2f}'.format(df[df['tariff'] == 'ultra']\n",
    "                                                                  ['duration_calls_sum'].mean()))\n",
    "print('Дисперсия по количеству минут в тарифе Ультра: {:.2f}'.format(np.var(df[df['tariff'] == 'ultra']\n",
    "                                                                           ['duration_calls_sum'])))\n",
    "print('Стандартное отклонение по количеству минут в тарифе Ультра: {:.2f}'.format(np.std(df[df['tariff'] == 'ultra']\n",
    "                                                                                        ['duration_calls_sum'], ddof=1)))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Среднее по количеству минут в тарифе Смарт равно 417,93, а в тарифе Ультра составляет 526,62 , что логично, лимит включенных минут в тарифе Ультра больше, соответственно люди покупают тариф Ультра чтобы пользоваться бОльшим количеством минут. \n",
    "- Дисперсия по количеству минут в тарифе Смарт равна 36203,07, а в тарифе Ультра 100771.22\n",
    "- Стандартное отклонение по количеству минут в тарифе Смарт равно 190.31. Стандартное отклонение по количеству минут в тарифе Ультра равно 317.61"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Количество использованных мегабайт**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "___Тариф Смарт___"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 366,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Среднее по количеству использованных мегабайт в тарифе Смарт: 16229.19\n",
      "Дисперсия по количеству использованных мегабайт в тарифе Смарт: 34530412.74\n",
      "Стандартное отклонение по количеству использованных мегабайт в тарифе Смарт: 5877.58\n"
     ]
    }
   ],
   "source": [
    "print('Среднее по количеству использованных мегабайт в тарифе Смарт: {:.2f}'.format(df[df['tariff'] == 'smart']\n",
    "                                                                  ['mb_used_round_sum'].mean()))\n",
    "print('Дисперсия по количеству использованных мегабайт в тарифе Смарт: {:.2f}'.format(np.var(df\n",
    "                                                                                             [df['tariff'] == 'smart']\n",
    "                                                                                             ['mb_used_round_sum'])))\n",
    "print('Стандартное отклонение по количеству использованных мегабайт в тарифе Смарт: {:.2f}'.format(np.std(df\n",
    "                                                                                                          [df['tariff'] == 'smart']\n",
    "                                                                                        ['mb_used_round_sum'], ddof=1)))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "___Тариф Ультра___"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 367,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Среднее по количеству использованных мегабайт в тарифе Ультра: 19486.90\n",
      "Дисперсия по количеству использованных мегабайт в тарифе Ультра: 101832133.11\n",
      "Стандартное отклонение по количеству использованных мегабайт в тарифе Ультра: 10096.32\n"
     ]
    }
   ],
   "source": [
    "print('Среднее по количеству использованных мегабайт в тарифе Ультра: {:.2f}'.format(df[df['tariff'] == 'ultra']\n",
    "                                                                  ['mb_used_round_sum'].mean()))\n",
    "print('Дисперсия по количеству использованных мегабайт в тарифе Ультра: {:.2f}'.format(np.var(df[df['tariff'] == 'ultra']\n",
    "                                                                           ['mb_used_round_sum'])))\n",
    "print('Стандартное отклонение по количеству использованных мегабайт в тарифе Ультра: {:.2f}'.format(np.std(df[df['tariff'] == 'ultra']\n",
    "                                                                                        ['mb_used_round_sum'], ddof=1)))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В результате получили, что:\n",
    "- Среднее по количеству использованных мегабайт в тарифе Смарт и Ультра не сильно различается и составляет 16229.19 и 19486.90. Исходя из полученного результата можно сказать, что для первой группы клиентов, использующих тариф Смарт, включенных мегабайт не будет хватать и в среднем каждый будет покупать дополнительно 1 Гб интернета, а для второй группы клиентов в среднем включенного трафика слишком много,т.к. лимит составляет 30 Гб (наше среднее гораздо меньше)\n",
    "- Дисперсия по количеству использованных мегабайт в тарифе Смарт равна 34530412.74, а в тарифе Ультра равна 101832133.11\n",
    "- Стандартное отклонение по количеству использованных мегабайт в тарифе Смарт оказалось равно 5877.58, стандартное отклонение по количеству использованных мегабайт в тарифе Ультра - 10096.32"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Количество сообщений**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "___Тариф Смарт___"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 368,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Среднее по количеству сообщений в тарифе Смарт: 33.38\n",
      "Дисперсия по количеству сообщений в тарифе Смарт: 796.46\n",
      "Стандартное отклонение по количеству сообщений в тарифе Смарт: 28.23\n"
     ]
    }
   ],
   "source": [
    "print('Среднее по количеству сообщений в тарифе Смарт: {:.2f}'.format(df[df['tariff'] == 'smart']\n",
    "                                                                  ['messages_count'].mean()))\n",
    "print('Дисперсия по количеству сообщений в тарифе Смарт: {:.2f}'.format(np.var(df[df['tariff'] == 'smart']\n",
    "                                                                           ['messages_count'])))\n",
    "print('Стандартное отклонение по количеству сообщений в тарифе Смарт: {:.2f}'.format(np.std(df[df['tariff'] == 'smart']\n",
    "                                                                                        ['messages_count'], ddof=1)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "___Тариф Ультра___"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 369,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Среднее по количеству сообщений в тарифе Ультра: 49.36\n",
      "Дисперсия по количеству сообщений в тарифе Ультра: 2282.95\n",
      "Стандартное отклонение по количеству сообщений в тарифе Ультра: 47.80\n"
     ]
    }
   ],
   "source": [
    "print('Среднее по количеству сообщений в тарифе Ультра: {:.2f}'.format(df[df['tariff'] == 'ultra']\n",
    "                                                                  ['messages_count'].mean()))\n",
    "print('Дисперсия по количеству сообщений в тарифе Ультра: {:.2f}'.format(np.var(df[df['tariff'] == 'ultra']\n",
    "                                                                           ['messages_count'])))\n",
    "print('Стандартное отклонение по количеству сообщений в тарифе Ультра: {:.2f}'.format(np.std(df[df['tariff'] == 'ultra']\n",
    "                                                                                        ['messages_count'], ddof=1)))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Среднее по количеству сообщений в тарифе Смарт и Ультра невысокое и составляет 33.38 и 49.36.\n",
    "- Дисперсия по количеству сообщений различается в двух тарифах достаточно сильно, почти в 3 раза и составляет в тарифе Смарт: 796.46, а в тарифе Ультра 2282.95\n",
    "- Стандартное отклонение по количеству сообщений в тарифе Смарт составляет 28.23, а в тарифе Ультра - 47.80"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "___Вопрос к ревьюеру:___ Не очень поняла какая интерпретация результатов ожидается от меня в данном случае, особенно по дисперсии и стандартному отклонению. Написала как думаю. Какую экономическую ценность можно привязать к этим показателям - дисперсии и стандартному отклонению?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Шаг 4. Проверьте гипотезы <a class=\"anchor\" id=\"step4\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Проверка гипотезы \"средняя выручка пользователей тарифов «Ультра» и «Смарт» различается\"**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Проведем тест Стъюдента для проверки нулевой гипотезы о равенстве средней выручки пользователей тарифов \"Ультра\" и \"Смарт\". Тогда альтернативная гипотеза - средняя выручка пользователей тарифов «Ультра» и «Смарт» различается. Выберем критический уровень статистической значимости альфа 5%."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 370,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "p-значение: 2.7240946993530856e-246\n",
      "Отвергаем нулевую гипотезу\n"
     ]
    }
   ],
   "source": [
    "alpha = .05\n",
    "results_tariffs = st.ttest_ind(df[df['tariff'] == 'smart']['income_sum'], df[df['tariff'] == 'ultra']['income_sum'], equal_var = False )\n",
    "print('p-значение:', results_tariffs.pvalue)\n",
    "\n",
    "if (results_tariffs.pvalue < alpha):\n",
    "    print('Отвергаем нулевую гипотезу')\n",
    "else:\n",
    "    print('Не получилось отвергнуть нулевую гипотезу')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Получили, что нулевая гипотеза о равенстве средней выручки тарифов \"Смарт\" и \"Ультра\" отверглась, тогда не отвергается альтернативная гипотеза - ___средняя выручка пользователей тарифов «Ультра» и «Смарт» различается___."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Проверка гипотезы \"средняя выручка пользователей из Москвы отличается от выручки пользователей из других регионов\".**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Проведем тест Стъюдента для проверки нулевой гипотезы о равенстве средней выручки пользователей из Москвы и выручки пользователей из других регионов. Тогда альтернативная гипотеза - средняя выручка пользователей из Москвы отличается от выручки пользователей из других регионов. Выберем критический уровень статистической значимости альфа 5%."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 371,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "p-значение: 0.531666503831252\n",
      "Не получилось отвергнуть нулевую гипотезу\n"
     ]
    }
   ],
   "source": [
    "alpha = .05\n",
    "results_tariffs = st.ttest_ind(df[df['city'] == 'Москва']['income_sum'], df[df['city'] != 'Москва']['income_sum'])\n",
    "print('p-значение:', results_tariffs.pvalue)\n",
    "\n",
    "if (results_tariffs.pvalue < alpha):\n",
    "    print('Отвергаем нулевую гипотезу')\n",
    "else:\n",
    "    print('Не получилось отвергнуть нулевую гипотезу')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Получили, что ___нулевая гипотеза о равенстве средней выручки пользователей из Москвы и выручки пользователей из других регионов не отверглась___. Полученное значение p-value 0.53 говорит о том, что хотя средняя выручка пользователей из Москвы и средняя выручка пользователей из других регионов неодинакова, с вероятностью почти в 51% такое или большее различие можно получить случайно. Это слишком большая вероятность чтобы делать выводы о значимом различиии между средней выручкой пользователей из Москвы и пользователей из других регионов."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Шаг 5. Напишите общий вывод <a class=\"anchor\" id=\"step5\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Мы провели анализ тарифных планов компании «Мегалайн» — федерального оператора сотовой связи по двум тарифным планам: «Смарт» и «Ультра». \n",
    "У нас было 5 таблиц с данными: \n",
    "- calls (информация о звонках), \n",
    "- internet (информация об интернет-сессиях), \n",
    "- messages (информация о сообщениях), \n",
    "- tariffs (информация о тарифах),\n",
    "- users (информация о пользователях)\n",
    "\n",
    "Для дальнейшей работы нам необходимо было объединить данные таблицы в одну, сгруппировав информацию по месяцам, уникальным пользователям и сумме израсходованных минут, использованных мегабайт и количеству отправленных сообщений. Сначала мы понизили разрядность некоторых показателей, чтобы оптимизировать работу с данными.\n",
    "        \n",
    "Сначала мы рассмотрели каждую таблицу по отдельности и привели к удобному виду, а также провели небольшой анализ по каждой таблице:\n",
    "\n",
    "**- По звонкам:**\n",
    "* Поскольку в условии было обозначено, что «Мегалайн» всегда округляет вверх значения минут и мегабайтов, поэтому округлили продолжительность разговора в минутах в бОльшую сторону. \n",
    "* В данных было почти 20% звонков со значением 0 минут (а мы не знали природу появления данных нулей - это может быть как пропущенные звонки, так и ошибки в данных). Сделали допущение, что таким образом обозначены пропущенные звонки, поскольку мы считали суммарное количество минут каждого абонента по месяцам, пропущенные значения не должны сильно исказить результат.\n",
    "* Получили, что у нескольких абонентов за месяц не было ни одной проговоренной минуты, а таких абонентов 3 шт - с user_id 1240, 1257, 1373. Количество звонков за месяц у них также небольшое - 1 или 2. Можно предположить, что возможно люди в эти месяцы куда-то уезжали и не разговаривали по мобильному телефону, либо у них 2 телефона и они используют один из них исключительно для интернета и т.д.\n",
    "* Количество уникальных пользователей каждый месяц линейно возрастало. Наибольшее медианное значение суммарного количества использованных минут составляет 492 в декабре месяце, а наименьшее медианное количество минут составляет 230 в январе месяце. С каждым месяцем привлекается все больше клиентов.\n",
    "Также наблюдается линейный рост количества звонков от месяца к месяцу (скорее всего из-за увелечения количества абонентов).\n",
    "* После построения гистограммы мы увидели, что наибольшее количество абонентов использует почти 500 минут в сумме, по диаграмме размаха можно сказать, что нормальные значения минут находятся в диапазоне от 0 до 1050 минут, все значения выходящие за данную отметку - выбросы.\n",
    "\n",
    "**- По мобильному интернету:**\n",
    "* Поскольку в условии было обозначено, что «Мегалайн» всегда округляет вверх значения минут и мегабайтов, поэтому округлили мегабайты в бОльшую сторону.\n",
    "* 2 абонента  вообще не расходовали мегабайты интернета в течение месяца.\n",
    "* Наибольшее медианное значение израсходованного интернета 18 ГБ было в декабре, в январе же было наименьшее медианное значение израсходованного интернета - почти 8 ГБ.\n",
    "* Построив \"Гистограмму распределения израсходованного интернета\" мы увидели, что наибольшее количество абонентов используют примерно 15 ГБ трафика. Гистограмма имеет форму колокола и стремится к нормальному распределению. Нормальные значения суммарного объема израсходованного трафика находятся в диапазоне от 0 до 35 ГБ. Все, что находится за пределами 35 ГБ  является выбросами.\n",
    "\n",
    "**- По количеству сообщений:**\n",
    "* Наибольшее среднее значение по отправленным смс сообщениям наблюдается в январе 44 шт в месяц, при этом наименьшее медианное значение наблюдается в январе - 22 сообщения в месяц.\n",
    "* Наибольшее количество абонентов отправляют в месяц примерно 25 сообщений. Нормальные значения количества отправленных смс сообщений сосредоточены в диапазоне от 1 до 60 сообщений. Все, что свыше этого диапазона - выбросы. \n",
    "\n",
    "После соединения всех таблиц мы заполнили нулями пропущенные значения в данных, предполагая, что если после слияния таблиц выяснилось, что данные о написанных сообщениях, исходящих звонках и использованных мегабайтах отсутствовали, значит абонент предпочитал звонки остальным видам сервиса, и просто не пользовался включенными функциями.\n",
    "Далее написали функцию, которая подсчитала помесячную выручку с каждого пользователя при превышении, включенных в тарифный план минут, смс и количества Гб и добавили в таблицу столбец с помесячной выручкой от каждого абонента с включением абонентской платы. Оказалось, что суммарная выручка по каждому тарифу линейно растет. По тарифу \"Смарт\" она возрастает более резко, а значит для бизнеса в 2018 году тариф был более выгоден главным образом за счет использования Гб и минут сверх лимита.\n",
    "\n",
    "Построив сводную таблицу со средними и медианными значениями всех показателей, а именно: сумма продолжительности звонков, количество сообщений и количество мегабайт в месяц мы увидели, что:\n",
    "видим:\n",
    "* клиенты тарифа \"Смарт\" и \"Ультра\" в среднем не выговаривают все количество минут, которое предоставляет им оператор за месяц. И в принципе средние и медианные значения израсходованных минут не сильно отличаются у двух тарифов.\n",
    "* Почти во все месяцы на тарифе Смарт клиенты выходили за пределы предоставляемого трафика интернета - 15360 МБ в месяц. Для бизнеса это выгодно, компания может получать прибыль с дополнительного предоставления интернета. Но, с другой стороны, в долгосрочной перспективе это может привести к тому, что клиенты начнут переходить на другие операторы \n",
    "* С сообщениями ситуация такая же как и с минутами, на всех тарифах в среднем люди не выходят за пределы предоставляемого лимита.\n",
    "\n",
    "Далее мы построили 'Гистограммы распределения израсходованного трафика по звонкам и интернету тарифа \"Смарт\"' для того чтобы проверить предположение, что люди предпочитают использовать интернет и таким образом созваниваться друг с другом (через сервисы Whatsapp или Telegram, например) чем использовать мобильную связь. Получили следующие результаты: \n",
    "\n",
    "* Наибольшая группа абонентов тарифа Смарт используют в месяц 350 - 360 минут или 400-530 минут, что укладывается в лимит предоставляемого трафика (500 звонков в месяц). По мере расходования все большего количества минут после 500 лимитированных,количество абонентов, согласных доплачивать за дополнительные минуты снижается, что логично. И тем не менее, у гистограммы мы видим \"хвост\", находятся люди в нашей выборке, которые много разговаривают по мобильной связи, и котором сильно не хватает лимита в 500 минут, и которым было бы выгоднее перейти на тариф Ультра с предоставляемым лимитом в 3000 минут. Распределение схоже с Пуассоновским и смещено влево, обрезано на нуле.\n",
    "\n",
    "* Гистограмма распределения потраченных Мб на тарифе Смарт напоминает колокол, скорее симметрична и стремится к нормальному распределению. Мы видим, что наибольшее число пользователей используют примерно 15 100 Мб, что составляет практически весь лимит трафика. Достаточно большое количество людей (около 120) используют трафик в размере 20000 Мб, видимо покупая недостающие Мб (или почти 5 Гб). После этого значения наблюдается резкое снижение частоты от центра к границам допуска. Соответственно, все меньше и меньше людей покупают дополнитеные Гб интернета, хотя находятся в нашей выборке и такие, которые используют в месяц 38 000 Мб, что примерно равно 38 Гб, соответственно, в их тариф включено 15 Гб, а они дополнительно покупают еще 23 Гб. Им было бы более выгодно выбрать вместо этого тариф \"Ультра\".\n",
    "\n",
    "Построили 'Гистограммы распределения израсходованного трафика по звонкам и интернету тарифа \"Ультра\" и получили, что:\n",
    "\n",
    "* Первая гистограмма - распределения израсходованных минут тарифа ультра несимметрична и неравномерна. Самый большой пик наблюдается в диапазоне 0-33 минут. Можно предположить, что абоненты, входящие в эту группу, не склонны использовать мобильную связь, а используют вместо нее интернет для звонков. А возможно они изначально выбрали такой тариф ради большого трафика на интернет. Наибольшая группа людей, пользующаяся тарифом \"Ультра\" использует минуты в диапазоне 250 - 750 минут. Никто из абонентов не расходует полное количество минут, входящих в трафик.\n",
    "\n",
    "* Гистограмма распределения израсходованных Мб тарифа Ультра крайне не равномерна, наблюдаются пики и падения по всей диаграмме с некоторой периодичностью.Выборка пользователей не равномерная, встречаются как люди, которые используют высокое количество Мб (например около 48 человек используют 22 000 мб), так и те, которые пользуются интернетом крайне мало (до 500 Гб). В \"хвосте\" находятся пользователи, которые доплачивают за дополнительные Гб интернета. Даже есть те, которые доплачивают почти за 20 Гб интернета.\n",
    "\n",
    "Построили гистограммы распределения количества сообщений на тарифе Смарт и Ультра и выяснили, что в целом распределение на обоих графиках схоже, а значит и поведение почти всех клиентов, относящихся к разным тарифам, тоже схоже. Например, в обоих случаях мы наблюдаем пик в диапазоне 0-3 сообщений в месяц у клиентов тарифа Смарт (примерно у 350 чел.) и пик в диапазоне 0-5 сообщений в месяц у пользователей тарифа Ультра (около 210 чел.) У пользователей тарифа Смарт мы видим тенденцию расходования лимита сообщений и плату за дальнейшие сообщения. Абоненты тарифа Ультра наоборот никогда не выходят за лимит предоставляемого количества сообщений.\n",
    "\n",
    "Мы разделили генеральную совокупность на 2 выборки: тариф Смарт и тариф Ультра. По этим выборкам посчитали среднее, дисперсию и стандартное отклонение по количеству минут, использованных мегабайт и количеству сообщений и получили следующие результаты:\n",
    "- Среднее по количеству минут в тарифе Смарт равно 417,93, а в тарифе Ультра составляет 526,62 , что логично, лимит включенных минут в тарифе Ультра больше, соответственно люди покупают тариф Ультра чтобы пользоваться бОльшим количеством минут. \n",
    "- Дисперсия по количеству минут в тарифе Смарт равна 36203,07, а в тарифе Ультра 100771.22\n",
    "- Стандартное отклонение по количеству минут в тарифе Смарт равно 190.31. Стандартное отклонение по количеству минут в тарифе Ультра равно 317.61\n",
    "- Среднее по количеству использованных мегабайт в тарифе Смарт и Ультра не сильно различается и составляет 16229.19 и 19486.90. Исходя из полученного результата можно сказать, что для первой группы клиентов, использующих тариф Смарт, включенных мегабайт не будет хватать и в среднем каждый будет покупать дополнительно 1 Гб интернета, а для второй группы клиентов в среднем включенного трафика слишком много,т.к. лимит составляет 30 Гб (наше среднее гораздо меньше)\n",
    "- Дисперсия по количеству использованных мегабайт в тарифе Смарт равна 34530412.74, а в тарифе Ультра равна 101832133.11\n",
    "- Стандартное отклонение по количеству использованных мегабайт в тарифе Смарт оказалось равно 5877.58, стандартное отклонение по количеству использованных мегабайт в тарифе Ультра - 10096.32\n",
    "- Среднее по количеству сообщений в тарифе Смарт и Ультра невысокое и составляет 33.38 и 49.36.\n",
    "- Дисперсия по количеству сообщений различается в двух тарифах достаточно сильно, почти в 3 раза и составляет в тарифе Смарт: 796.46, а в тарифе Ультра 2282.95\n",
    "- Стандартное отклонение по количеству сообщений в тарифе Смарт составляет 28.23, а в тарифе Ультра - 47.80\n",
    "\n",
    "Мы провели тест Стъюдента для проверки нулевой гипотезы о равенстве средней выручки пользователей тарифов \"Ультра\" и \"Смарт\". Альтернативная гипотеза - средняя выручка пользователей тарифов «Ультра» и «Смарт» различается. Выбрали критический уровень статистической значимости альфа 5%.\n",
    "Получили, что нулевая гипотеза о равенстве средней выручки тарифов \"Смарт\" и \"Ультра\" отверглась, тогда не отвергается альтернативная гипотеза - ___средняя выручка пользователей тарифов «Ультра» и «Смарт» различается___.\n",
    "\n",
    "Провели тест Стъюдента для проверки нулевой гипотезы о равенстве средней выручки пользователей из Москвы и выручки пользователей из других регионов. Альтернативная гипотеза - средняя выручка пользователей из Москвы отличается от выручки пользователей из других регионов. Выбрали критический уровень статистической значимости альфа 5%.\n",
    "Получили, что ___нулевая гипотеза о равенстве средней выручки пользователей из Москвы и выручки пользователей из других регионов не отверглась___. Полученное значение p-value 0.53 говорит о том, что хотя средняя выручка пользователей из Москвы и средняя выручка пользователей из других регионов неодинакова, с вероятностью почти в 51% такое или большее различие можно получить случайно. Это слишком большая вероятность чтобы делать выводы о значимом различиии между средней выручкой пользователей из Москвы и пользователей из других регионов.\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
